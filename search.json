[{"path":"https://mrchypark.github.io/elbird/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Lesser General Public License","title":"GNU Lesser General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed. version GNU Lesser General Public License incorporates terms conditions version 3 GNU General Public License, supplemented additional permissions listed .","code":""},{"path":"https://mrchypark.github.io/elbird/LICENSE.html","id":"0-additional-definitions","dir":"","previous_headings":"","what":"0. Additional Definitions","title":"GNU Lesser General Public License","text":"used herein, “License” refers version 3 GNU Lesser General Public License, “GNU GPL” refers version 3 GNU General Public License. “Library” refers covered work governed License, Application Combined Work defined . “Application” work makes use interface provided Library, otherwise based Library. Defining subclass class defined Library deemed mode using interface provided Library. “Combined Work” work produced combining linking Application Library. particular version Library Combined Work made also called “Linked Version”. “Minimal Corresponding Source” Combined Work means Corresponding Source Combined Work, excluding source code portions Combined Work , considered isolation, based Application, Linked Version. “Corresponding Application Code” Combined Work means object code /source code Application, including data utility programs needed reproducing Combined Work Application, excluding System Libraries Combined Work.","code":""},{"path":"https://mrchypark.github.io/elbird/LICENSE.html","id":"1-exception-to-section-3-of-the-gnu-gpl","dir":"","previous_headings":"","what":"1. Exception to Section 3 of the GNU GPL","title":"GNU Lesser General Public License","text":"may convey covered work sections 3 4 License without bound section 3 GNU GPL.","code":""},{"path":"https://mrchypark.github.io/elbird/LICENSE.html","id":"2-conveying-modified-versions","dir":"","previous_headings":"","what":"2. Conveying Modified Versions","title":"GNU Lesser General Public License","text":"modify copy Library, , modifications, facility refers function data supplied Application uses facility (argument passed facility invoked), may convey copy modified version: ) License, provided make good faith effort ensure , event Application supply function data, facility still operates, performs whatever part purpose remains meaningful, b) GNU GPL, none additional permissions License applicable copy.","code":""},{"path":"https://mrchypark.github.io/elbird/LICENSE.html","id":"3-object-code-incorporating-material-from-library-header-files","dir":"","previous_headings":"","what":"3. Object Code Incorporating Material from Library Header Files","title":"GNU Lesser General Public License","text":"object code form Application may incorporate material header file part Library. may convey object code terms choice, provided , incorporated material limited numerical parameters, data structure layouts accessors, small macros, inline functions templates (ten fewer lines length), following: ) Give prominent notice copy object code Library used Library use covered License. b) Accompany object code copy GNU GPL license document.","code":""},{"path":"https://mrchypark.github.io/elbird/LICENSE.html","id":"4-combined-works","dir":"","previous_headings":"","what":"4. Combined Works","title":"GNU Lesser General Public License","text":"may convey Combined Work terms choice , taken together, effectively restrict modification portions Library contained Combined Work reverse engineering debugging modifications, also following: ) Give prominent notice copy Combined Work Library used Library use covered License. b) Accompany Combined Work copy GNU GPL license document. c) Combined Work displays copyright notices execution, include copyright notice Library among notices, well reference directing user copies GNU GPL license document. d) one following: 0) Convey Minimal Corresponding Source terms License, Corresponding Application Code form suitable , terms permit, user recombine relink Application modified version Linked Version produce modified Combined Work, manner specified section 6 GNU GPL conveying Corresponding Source. 1) Use suitable shared library mechanism linking Library. suitable mechanism one () uses run time copy Library already present user’s computer system, (b) operate properly modified version Library interface-compatible Linked Version. e) Provide Installation Information, otherwise required provide information section 6 GNU GPL, extent information necessary install execute modified version Combined Work produced recombining relinking Application modified version Linked Version. (use option 4d0, Installation Information must accompany Minimal Corresponding Source Corresponding Application Code. use option 4d1, must provide Installation Information manner specified section 6 GNU GPL conveying Corresponding Source.)","code":""},{"path":"https://mrchypark.github.io/elbird/LICENSE.html","id":"5-combined-libraries","dir":"","previous_headings":"","what":"5. Combined Libraries","title":"GNU Lesser General Public License","text":"may place library facilities work based Library side side single library together library facilities Applications covered License, convey combined library terms choice, following: ) Accompany combined library copy work based Library, uncombined library facilities, conveyed terms License. b) Give prominent notice combined library part work based Library, explaining find accompanying uncombined form work.","code":""},{"path":"https://mrchypark.github.io/elbird/LICENSE.html","id":"6-revised-versions-of-the-gnu-lesser-general-public-license","dir":"","previous_headings":"","what":"6. Revised Versions of the GNU Lesser General Public License","title":"GNU Lesser General Public License","text":"Free Software Foundation may publish revised /new versions GNU Lesser General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Library received specifies certain numbered version GNU Lesser General Public License “later version” applies , option following terms conditions either published version later version published Free Software Foundation. Library received specify version number GNU Lesser General Public License, may choose version GNU Lesser General Public License ever published Free Software Foundation. Library received specifies proxy can decide whether future versions GNU Lesser General Public License shall apply, proxy’s public statement acceptance version permanent authorization choose version Library.","code":""},{"path":"https://mrchypark.github.io/elbird/articles/README_kr.html","id":"elbird","dir":"Articles","previous_headings":"","what":"elbird","title":"","text":"elbird 패키지는 cpp 기반의 Kiwi 를 wrapping한 형태소 분석기 패키지입니다. 다른 분석기에 비해 빠른 성능과 쉬운 사용자 사전 추가, 미등록 명사 추출 등의 편의 기능이 있습니다.","code":""},{"path":"https://mrchypark.github.io/elbird/articles/README_kr.html","id":"설치","dir":"Articles","previous_headings":"elbird","what":"설치","title":"","text":"elbird는 아래 명령어로 설치할 수 있습니다.","code":"# CRAN install.packages(\"elbird\")  # Dev version install.packages(\"elbird\", repos = 'https://mrchypark.r-universe.dev')"},{"path":"https://mrchypark.github.io/elbird/articles/README_kr.html","id":"사용예","dir":"Articles","previous_headings":"elbird","what":"사용예","title":"","text":"아래 예시들은 elbird의 함수의 동작을 소개합니다.","code":""},{"path":"https://mrchypark.github.io/elbird/articles/README_kr.html","id":"tokenize-함수","dir":"Articles","previous_headings":"elbird > 사용예","what":"tokenize 함수","title":"","text":"기본적으로 tibble 자료형으로 출력하는 tokenize(), tidytext와의 호환을 지원하는 tokenize_tidy() 함수를 제공합니다. 여러 문장의 경우 vector나 list로 입력받아서 list로 출력합니다.","code":"library(elbird) tokenize(\"안녕하세요 kiwi 형태소 분석기의 R wrapper인 elbird를 소개합니다.\") #> # A tibble: 9 × 5 #>   sent  form       tag   start   len #>   <chr> <chr>      <chr> <int> <int> #> 1 1     안녕하세요 NNP       1     5 #> 2 1     kiwi       SL        7     4 #> 3 1     형태소     NNG      12     3 #> 4 1     분석기     NNG      16     3 #> 5 1     R          SL       21     1 #> 6 1     wrapper    SL       23     7 #> 7 1     elbird     SL       32     6 #> 8 1     소개       NNG      40     2 #> 9 1     ᆸ니다      EF       42     3 tokenize_tidy(\"안녕하세요 kiwi 형태소 분석기의 R wrapper인 elbird를 소개합니다.\") #> [[1]] #> [1] \"안녕하세요/NNP\" \"kiwi/SL\"        \"형태소/NNG\"     \"분석기/NNG\"     #> [5] \"R/SL\"           \"wrapper/SL\"     \"elbird/SL\"      \"소개/NNG\"       #> [9] \"ᆸ니다/EF\" tokenize(c(\"새롭게 작성된 패키지 입니다.\", \"tidytext와의 호환을 염두하고 작성하였습니다.\")) #> # A tibble: 9 × 5 #>   sent  form     tag   start   len #>   <chr> <chr>    <chr> <int> <int> #> 1 1     새롭     VA        1     2 #> 2 1     작성     NNG       5     2 #> 3 1     패키지   NNG       9     3 #> 4 1     ᆸ니다    EF       13     3 #> 5 2     tidytext SL        1     8 #> 6 2     호환     NNG      12     2 #> 7 2     염두     NNG      16     2 #> 8 2     작성     NNG      21     2 #> 9 2     습니다   EF       25     3 tokenize_tidy(c(\"새롭게 작성된 패키지 입니다.\", \"tidytext와의 호환을 염두하고 작성하였습니다.\")) #> [[1]] #> [1] \"새롭/VA\"    \"작성/NNG\"   \"패키지/NNG\" \"ᆸ니다/EF\"    #>  #> [[2]] #> [1] \"tidytext/SL\" \"호환/NNG\"    \"염두/NNG\"    \"작성/NNG\"    \"습니다/EF\""},{"path":"https://mrchypark.github.io/elbird/articles/README_kr.html","id":"with-tidytext","dir":"Articles","previous_headings":"elbird > 사용예","what":"With tidytext","title":"","text":"tokenize_tidy() 함수는 tokenize_tt(), tokenize_tidytext() 로도 사용할 수 있습니다. 아래는 tidytext 패키지와 함께 사용하는 예시 입니다. 아래 tar는 형태소 분석을 위한 타겟 텍스트입니다. tar를 tidytext 패키지의 함수인 unnest_tokens()로 elbird의 tokenize_tidy()를 tokenizer로 사용하는 예시입니다.","code":"# 텍스트 데이터는 presidentSpeech 패키지를 사용했습니다. # install.packages(\"presidentSpeech\", repos = \"https://forkonlp.r-universe.dev/\") library(vroom)  tar <- vroom(\"exam.txt\") #> Rows: 62 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (1): content #> dbl (1): paragraph #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. tar #> # A tibble: 62 × 2 #>    paragraph content                                                             #>        <dbl> <chr>                                                               #>  1         1 존경하는 국민 여러분!                                               #>  2         2 700만 해외동포 여러분!                                              #>  3         3 이 자리에 참석하신 노무현ㆍ김대중ㆍ김영삼ㆍ전두환 전 대통령, 그리…  #>  4         4 저는 오늘 국민 여러분의 부름을 받고 대한민국의 제17대 대통령에 취…  #>  5         5 저는 이 자리에서 국민 여러분께 약속드립니다. 국민을 섬겨 나라를 편… #>  6         6 올해로 대한민국 건국 60주년을 맞이합니다. 우리는 잃었던 땅을 되찾…  #>  7         7 지구 상에서 가장 가난했던 나라가 세계 10위권의 경제 대국이 되었습…  #>  8         8 그러나 우리는 알고 있습니다. 그것은 기적이 아니라 우리가 다 함께 …  #>  9         9 독립을 위해 목숨을 바친 선열들, 전선에서 산화한 장병들, 뙤약볕과 …  #> 10        10 장롱 속 금붙이를 들고나와 외환위기에 맞섰던 시민들, 겨울 바닷가에…  #> # … with 52 more rows library(tidytext) unnest_tokens(   tar,   input = content,   output = word,   token = tokenize_tidy ) #> # A tibble: 2,117 × 2 #>    paragraph word      #>        <dbl> <chr>     #>  1         1 존경/nng  #>  2         1 국민/nng  #>  3         1 여러분/np #>  4         2 700/sn    #>  5         2 해외/nng  #>  6         2 동포/nng  #>  7         2 여러분/np #>  8         3 자리/nng  #>  9         3 참석/nng  #> 10         3 시/ep     #> # … with 2,107 more rows"},{"path":"https://mrchypark.github.io/elbird/articles/README_kr.html","id":"analyze-함수","dir":"Articles","previous_headings":"elbird > 사용예","what":"analyze 함수","title":"","text":"추가로 여러 분석 후보와 분석결과의 점수를 함께 제공하는 analyze() 함수를 제공합니다.","code":"library(elbird) analyze(\"안녕하세요 kiwi 형태소 분석기의 R wrapper인 elbird를 소개합니다.\") #> [[1]] #> [[1]]$Token #> [[1]]$Token[[1]] #> [[1]]$Token[[1]]$form #> [1] \"안녕하세요\" #>  #> [[1]]$Token[[1]]$tag #> [1] \"NNP\" #>  #> [[1]]$Token[[1]]$start #> [1] 1 #>  #> [[1]]$Token[[1]]$len #> [1] 5 #>  #>  #> [[1]]$Token[[2]] #> [[1]]$Token[[2]]$form #> [1] \"kiwi\" #>  #> [[1]]$Token[[2]]$tag #> [1] \"SL\" #>  #> [[1]]$Token[[2]]$start #> [1] 7 #>  #> [[1]]$Token[[2]]$len #> [1] 4 #>  #>  #> [[1]]$Token[[3]] #> [[1]]$Token[[3]]$form #> [1] \"형태소\" #>  #> [[1]]$Token[[3]]$tag #> [1] \"NNG\" #>  #> [[1]]$Token[[3]]$start #> [1] 12 #>  #> [[1]]$Token[[3]]$len #> [1] 3 #>  #>  #> [[1]]$Token[[4]] #> [[1]]$Token[[4]]$form #> [1] \"분석기\" #>  #> [[1]]$Token[[4]]$tag #> [1] \"NNG\" #>  #> [[1]]$Token[[4]]$start #> [1] 16 #>  #> [[1]]$Token[[4]]$len #> [1] 3 #>  #>  #> [[1]]$Token[[5]] #> [[1]]$Token[[5]]$form #> [1] \"의\" #>  #> [[1]]$Token[[5]]$tag #> [1] \"JKG\" #>  #> [[1]]$Token[[5]]$start #> [1] 19 #>  #> [[1]]$Token[[5]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[6]] #> [[1]]$Token[[6]]$form #> [1] \"R\" #>  #> [[1]]$Token[[6]]$tag #> [1] \"SL\" #>  #> [[1]]$Token[[6]]$start #> [1] 21 #>  #> [[1]]$Token[[6]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[7]] #> [[1]]$Token[[7]]$form #> [1] \"wrapper\" #>  #> [[1]]$Token[[7]]$tag #> [1] \"SL\" #>  #> [[1]]$Token[[7]]$start #> [1] 23 #>  #> [[1]]$Token[[7]]$len #> [1] 7 #>  #>  #> [[1]]$Token[[8]] #> [[1]]$Token[[8]]$form #> [1] \"이\" #>  #> [[1]]$Token[[8]]$tag #> [1] \"VCP\" #>  #> [[1]]$Token[[8]]$start #> [1] 30 #>  #> [[1]]$Token[[8]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[9]] #> [[1]]$Token[[9]]$form #> [1] \"ᆫ\" #>  #> [[1]]$Token[[9]]$tag #> [1] \"ETM\" #>  #> [[1]]$Token[[9]]$start #> [1] 30 #>  #> [[1]]$Token[[9]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[10]] #> [[1]]$Token[[10]]$form #> [1] \"elbird\" #>  #> [[1]]$Token[[10]]$tag #> [1] \"SL\" #>  #> [[1]]$Token[[10]]$start #> [1] 32 #>  #> [[1]]$Token[[10]]$len #> [1] 6 #>  #>  #> [[1]]$Token[[11]] #> [[1]]$Token[[11]]$form #> [1] \"를\" #>  #> [[1]]$Token[[11]]$tag #> [1] \"JKO\" #>  #> [[1]]$Token[[11]]$start #> [1] 38 #>  #> [[1]]$Token[[11]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[12]] #> [[1]]$Token[[12]]$form #> [1] \"소개\" #>  #> [[1]]$Token[[12]]$tag #> [1] \"NNG\" #>  #> [[1]]$Token[[12]]$start #> [1] 40 #>  #> [[1]]$Token[[12]]$len #> [1] 2 #>  #>  #> [[1]]$Token[[13]] #> [[1]]$Token[[13]]$form #> [1] \"하\" #>  #> [[1]]$Token[[13]]$tag #> [1] \"XSV\" #>  #> [[1]]$Token[[13]]$start #> [1] 42 #>  #> [[1]]$Token[[13]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[14]] #> [[1]]$Token[[14]]$form #> [1] \"ᆸ니다\" #>  #> [[1]]$Token[[14]]$tag #> [1] \"EF\" #>  #> [[1]]$Token[[14]]$start #> [1] 42 #>  #> [[1]]$Token[[14]]$len #> [1] 3 #>  #>  #> [[1]]$Token[[15]] #> [[1]]$Token[[15]]$form #> [1] \".\" #>  #> [[1]]$Token[[15]]$tag #> [1] \"SF\" #>  #> [[1]]$Token[[15]]$start #> [1] 45 #>  #> [[1]]$Token[[15]]$len #> [1] 1 #>  #>  #>  #> [[1]]$Score #> [1] -91.58401 #>  #>  #> [[2]] #> [[2]]$Token #> [[2]]$Token[[1]] #> [[2]]$Token[[1]]$form #> [1] \"안녕\" #>  #> [[2]]$Token[[1]]$tag #> [1] \"NNG\" #>  #> [[2]]$Token[[1]]$start #> [1] 1 #>  #> [[2]]$Token[[1]]$len #> [1] 2 #>  #>  #> [[2]]$Token[[2]] #> [[2]]$Token[[2]]$form #> [1] \"하\" #>  #> [[2]]$Token[[2]]$tag #> [1] \"XSA\" #>  #> [[2]]$Token[[2]]$start #> [1] 3 #>  #> [[2]]$Token[[2]]$len #> [1] 1 #>  #>  #> [[2]]$Token[[3]] #> [[2]]$Token[[3]]$form #> [1] \"시\" #>  #> [[2]]$Token[[3]]$tag #> [1] \"EP\" #>  #> [[2]]$Token[[3]]$start #> [1] 4 #>  #> [[2]]$Token[[3]]$len #> [1] 1 #>  #>  #> [[2]]$Token[[4]] #> [[2]]$Token[[4]]$form #> [1] \"어요\" #>  #> [[2]]$Token[[4]]$tag #> [1] \"EF\" #>  #> [[2]]$Token[[4]]$start #> [1] 4 #>  #> [[2]]$Token[[4]]$len #> [1] 2 #>  #>  #> [[2]]$Token[[5]] #> [[2]]$Token[[5]]$form #> [1] \"kiwi\" #>  #> [[2]]$Token[[5]]$tag #> [1] \"SL\" #>  #> [[2]]$Token[[5]]$start #> [1] 7 #>  #> [[2]]$Token[[5]]$len #> [1] 4 #>  #>  #> [[2]]$Token[[6]] #> [[2]]$Token[[6]]$form #> [1] \"형태소\" #>  #> [[2]]$Token[[6]]$tag #> [1] \"NNG\" #>  #> [[2]]$Token[[6]]$start #> [1] 12 #>  #> [[2]]$Token[[6]]$len #> [1] 3 #>  #>  #> [[2]]$Token[[7]] #> [[2]]$Token[[7]]$form #> [1] \"분석기\" #>  #> [[2]]$Token[[7]]$tag #> [1] \"NNG\" #>  #> [[2]]$Token[[7]]$start #> [1] 16 #>  #> [[2]]$Token[[7]]$len #> [1] 3 #>  #>  #> [[2]]$Token[[8]] #> [[2]]$Token[[8]]$form #> [1] \"의\" #>  #> [[2]]$Token[[8]]$tag #> [1] \"JKG\" #>  #> [[2]]$Token[[8]]$start #> [1] 19 #>  #> [[2]]$Token[[8]]$len #> [1] 1 #>  #>  #> [[2]]$Token[[9]] #> [[2]]$Token[[9]]$form #> [1] \"R\" #>  #> [[2]]$Token[[9]]$tag #> [1] \"SL\" #>  #> [[2]]$Token[[9]]$start #> [1] 21 #>  #> [[2]]$Token[[9]]$len #> [1] 1 #>  #>  #> [[2]]$Token[[10]] #> [[2]]$Token[[10]]$form #> [1] \"wrapper\" #>  #> [[2]]$Token[[10]]$tag #> [1] \"SL\" #>  #> [[2]]$Token[[10]]$start #> [1] 23 #>  #> [[2]]$Token[[10]]$len #> [1] 7 #>  #>  #> [[2]]$Token[[11]] #> [[2]]$Token[[11]]$form #> [1] \"이\" #>  #> [[2]]$Token[[11]]$tag #> [1] \"VCP\" #>  #> [[2]]$Token[[11]]$start #> [1] 30 #>  #> [[2]]$Token[[11]]$len #> [1] 1 #>  #>  #> [[2]]$Token[[12]] #> [[2]]$Token[[12]]$form #> [1] \"ᆫ\" #>  #> [[2]]$Token[[12]]$tag #> [1] \"ETM\" #>  #> [[2]]$Token[[12]]$start #> [1] 30 #>  #> [[2]]$Token[[12]]$len #> [1] 1 #>  #>  #> [[2]]$Token[[13]] #> [[2]]$Token[[13]]$form #> [1] \"elbird\" #>  #> [[2]]$Token[[13]]$tag #> [1] \"SL\" #>  #> [[2]]$Token[[13]]$start #> [1] 32 #>  #> [[2]]$Token[[13]]$len #> [1] 6 #>  #>  #> [[2]]$Token[[14]] #> [[2]]$Token[[14]]$form #> [1] \"를\" #>  #> [[2]]$Token[[14]]$tag #> [1] \"JKO\" #>  #> [[2]]$Token[[14]]$start #> [1] 38 #>  #> [[2]]$Token[[14]]$len #> [1] 1 #>  #>  #> [[2]]$Token[[15]] #> [[2]]$Token[[15]]$form #> [1] \"소개\" #>  #> [[2]]$Token[[15]]$tag #> [1] \"NNG\" #>  #> [[2]]$Token[[15]]$start #> [1] 40 #>  #> [[2]]$Token[[15]]$len #> [1] 2 #>  #>  #> [[2]]$Token[[16]] #> [[2]]$Token[[16]]$form #> [1] \"하\" #>  #> [[2]]$Token[[16]]$tag #> [1] \"XSV\" #>  #> [[2]]$Token[[16]]$start #> [1] 42 #>  #> [[2]]$Token[[16]]$len #> [1] 1 #>  #>  #> [[2]]$Token[[17]] #> [[2]]$Token[[17]]$form #> [1] \"ᆸ니다\" #>  #> [[2]]$Token[[17]]$tag #> [1] \"EF\" #>  #> [[2]]$Token[[17]]$start #> [1] 42 #>  #> [[2]]$Token[[17]]$len #> [1] 3 #>  #>  #> [[2]]$Token[[18]] #> [[2]]$Token[[18]]$form #> [1] \".\" #>  #> [[2]]$Token[[18]]$tag #> [1] \"SF\" #>  #> [[2]]$Token[[18]]$start #> [1] 45 #>  #> [[2]]$Token[[18]]$len #> [1] 1 #>  #>  #>  #> [[2]]$Score #> [1] -95.38721 #>  #>  #> [[3]] #> [[3]]$Token #> [[3]]$Token[[1]] #> [[3]]$Token[[1]]$form #> [1] \"안녕\" #>  #> [[3]]$Token[[1]]$tag #> [1] \"NNG\" #>  #> [[3]]$Token[[1]]$start #> [1] 1 #>  #> [[3]]$Token[[1]]$len #> [1] 2 #>  #>  #> [[3]]$Token[[2]] #> [[3]]$Token[[2]]$form #> [1] \"하\" #>  #> [[3]]$Token[[2]]$tag #> [1] \"XSA\" #>  #> [[3]]$Token[[2]]$start #> [1] 3 #>  #> [[3]]$Token[[2]]$len #> [1] 1 #>  #>  #> [[3]]$Token[[3]] #> [[3]]$Token[[3]]$form #> [1] \"시\" #>  #> [[3]]$Token[[3]]$tag #> [1] \"EP\" #>  #> [[3]]$Token[[3]]$start #> [1] 4 #>  #> [[3]]$Token[[3]]$len #> [1] 1 #>  #>  #> [[3]]$Token[[4]] #> [[3]]$Token[[4]]$form #> [1] \"어요\" #>  #> [[3]]$Token[[4]]$tag #> [1] \"EF\" #>  #> [[3]]$Token[[4]]$start #> [1] 4 #>  #> [[3]]$Token[[4]]$len #> [1] 2 #>  #>  #> [[3]]$Token[[5]] #> [[3]]$Token[[5]]$form #> [1] \"kiwi\" #>  #> [[3]]$Token[[5]]$tag #> [1] \"SL\" #>  #> [[3]]$Token[[5]]$start #> [1] 7 #>  #> [[3]]$Token[[5]]$len #> [1] 4 #>  #>  #> [[3]]$Token[[6]] #> [[3]]$Token[[6]]$form #> [1] \"형태소\" #>  #> [[3]]$Token[[6]]$tag #> [1] \"NNG\" #>  #> [[3]]$Token[[6]]$start #> [1] 12 #>  #> [[3]]$Token[[6]]$len #> [1] 3 #>  #>  #> [[3]]$Token[[7]] #> [[3]]$Token[[7]]$form #> [1] \"분석기\" #>  #> [[3]]$Token[[7]]$tag #> [1] \"NNG\" #>  #> [[3]]$Token[[7]]$start #> [1] 16 #>  #> [[3]]$Token[[7]]$len #> [1] 3 #>  #>  #> [[3]]$Token[[8]] #> [[3]]$Token[[8]]$form #> [1] \"의\" #>  #> [[3]]$Token[[8]]$tag #> [1] \"JKG\" #>  #> [[3]]$Token[[8]]$start #> [1] 19 #>  #> [[3]]$Token[[8]]$len #> [1] 1 #>  #>  #> [[3]]$Token[[9]] #> [[3]]$Token[[9]]$form #> [1] \"R\" #>  #> [[3]]$Token[[9]]$tag #> [1] \"SL\" #>  #> [[3]]$Token[[9]]$start #> [1] 21 #>  #> [[3]]$Token[[9]]$len #> [1] 1 #>  #>  #> [[3]]$Token[[10]] #> [[3]]$Token[[10]]$form #> [1] \"wrapper\" #>  #> [[3]]$Token[[10]]$tag #> [1] \"SL\" #>  #> [[3]]$Token[[10]]$start #> [1] 23 #>  #> [[3]]$Token[[10]]$len #> [1] 7 #>  #>  #> [[3]]$Token[[11]] #> [[3]]$Token[[11]]$form #> [1] \"이\" #>  #> [[3]]$Token[[11]]$tag #> [1] \"VCP\" #>  #> [[3]]$Token[[11]]$start #> [1] 30 #>  #> [[3]]$Token[[11]]$len #> [1] 1 #>  #>  #> [[3]]$Token[[12]] #> [[3]]$Token[[12]]$form #> [1] \"ᆫ\" #>  #> [[3]]$Token[[12]]$tag #> [1] \"ETM\" #>  #> [[3]]$Token[[12]]$start #> [1] 30 #>  #> [[3]]$Token[[12]]$len #> [1] 1 #>  #>  #> [[3]]$Token[[13]] #> [[3]]$Token[[13]]$form #> [1] \"elbird\" #>  #> [[3]]$Token[[13]]$tag #> [1] \"SL\" #>  #> [[3]]$Token[[13]]$start #> [1] 32 #>  #> [[3]]$Token[[13]]$len #> [1] 6 #>  #>  #> [[3]]$Token[[14]] #> [[3]]$Token[[14]]$form #> [1] \"를\" #>  #> [[3]]$Token[[14]]$tag #> [1] \"JKO\" #>  #> [[3]]$Token[[14]]$start #> [1] 38 #>  #> [[3]]$Token[[14]]$len #> [1] 1 #>  #>  #> [[3]]$Token[[15]] #> [[3]]$Token[[15]]$form #> [1] \"소개\" #>  #> [[3]]$Token[[15]]$tag #> [1] \"NNG\" #>  #> [[3]]$Token[[15]]$start #> [1] 40 #>  #> [[3]]$Token[[15]]$len #> [1] 2 #>  #>  #> [[3]]$Token[[16]] #> [[3]]$Token[[16]]$form #> [1] \"하\" #>  #> [[3]]$Token[[16]]$tag #> [1] \"XSV\" #>  #> [[3]]$Token[[16]]$start #> [1] 42 #>  #> [[3]]$Token[[16]]$len #> [1] 1 #>  #>  #> [[3]]$Token[[17]] #> [[3]]$Token[[17]]$form #> [1] \"ᆸ니다\" #>  #> [[3]]$Token[[17]]$tag #> [1] \"EF\" #>  #> [[3]]$Token[[17]]$start #> [1] 42 #>  #> [[3]]$Token[[17]]$len #> [1] 3 #>  #>  #> [[3]]$Token[[18]] #> [[3]]$Token[[18]]$form #> [1] \".\" #>  #> [[3]]$Token[[18]]$tag #> [1] \"SF\" #>  #> [[3]]$Token[[18]]$start #> [1] 45 #>  #> [[3]]$Token[[18]]$len #> [1] 1 #>  #>  #>  #> [[3]]$Score #> [1] -95.38721 analyze(c(\"안녕하세요 kiwi 형태소 분석기의 R wrapper인 elbird를 소개합니다.\"), top_n = 1) #> [[1]] #> [[1]]$Token #> [[1]]$Token[[1]] #> [[1]]$Token[[1]]$form #> [1] \"안녕하세요\" #>  #> [[1]]$Token[[1]]$tag #> [1] \"NNP\" #>  #> [[1]]$Token[[1]]$start #> [1] 1 #>  #> [[1]]$Token[[1]]$len #> [1] 5 #>  #>  #> [[1]]$Token[[2]] #> [[1]]$Token[[2]]$form #> [1] \"kiwi\" #>  #> [[1]]$Token[[2]]$tag #> [1] \"SL\" #>  #> [[1]]$Token[[2]]$start #> [1] 7 #>  #> [[1]]$Token[[2]]$len #> [1] 4 #>  #>  #> [[1]]$Token[[3]] #> [[1]]$Token[[3]]$form #> [1] \"형태소\" #>  #> [[1]]$Token[[3]]$tag #> [1] \"NNG\" #>  #> [[1]]$Token[[3]]$start #> [1] 12 #>  #> [[1]]$Token[[3]]$len #> [1] 3 #>  #>  #> [[1]]$Token[[4]] #> [[1]]$Token[[4]]$form #> [1] \"분석기\" #>  #> [[1]]$Token[[4]]$tag #> [1] \"NNG\" #>  #> [[1]]$Token[[4]]$start #> [1] 16 #>  #> [[1]]$Token[[4]]$len #> [1] 3 #>  #>  #> [[1]]$Token[[5]] #> [[1]]$Token[[5]]$form #> [1] \"의\" #>  #> [[1]]$Token[[5]]$tag #> [1] \"JKG\" #>  #> [[1]]$Token[[5]]$start #> [1] 19 #>  #> [[1]]$Token[[5]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[6]] #> [[1]]$Token[[6]]$form #> [1] \"R\" #>  #> [[1]]$Token[[6]]$tag #> [1] \"SL\" #>  #> [[1]]$Token[[6]]$start #> [1] 21 #>  #> [[1]]$Token[[6]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[7]] #> [[1]]$Token[[7]]$form #> [1] \"wrapper\" #>  #> [[1]]$Token[[7]]$tag #> [1] \"SL\" #>  #> [[1]]$Token[[7]]$start #> [1] 23 #>  #> [[1]]$Token[[7]]$len #> [1] 7 #>  #>  #> [[1]]$Token[[8]] #> [[1]]$Token[[8]]$form #> [1] \"이\" #>  #> [[1]]$Token[[8]]$tag #> [1] \"VCP\" #>  #> [[1]]$Token[[8]]$start #> [1] 30 #>  #> [[1]]$Token[[8]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[9]] #> [[1]]$Token[[9]]$form #> [1] \"ᆫ\" #>  #> [[1]]$Token[[9]]$tag #> [1] \"ETM\" #>  #> [[1]]$Token[[9]]$start #> [1] 30 #>  #> [[1]]$Token[[9]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[10]] #> [[1]]$Token[[10]]$form #> [1] \"elbird\" #>  #> [[1]]$Token[[10]]$tag #> [1] \"SL\" #>  #> [[1]]$Token[[10]]$start #> [1] 32 #>  #> [[1]]$Token[[10]]$len #> [1] 6 #>  #>  #> [[1]]$Token[[11]] #> [[1]]$Token[[11]]$form #> [1] \"를\" #>  #> [[1]]$Token[[11]]$tag #> [1] \"JKO\" #>  #> [[1]]$Token[[11]]$start #> [1] 38 #>  #> [[1]]$Token[[11]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[12]] #> [[1]]$Token[[12]]$form #> [1] \"소개\" #>  #> [[1]]$Token[[12]]$tag #> [1] \"NNG\" #>  #> [[1]]$Token[[12]]$start #> [1] 40 #>  #> [[1]]$Token[[12]]$len #> [1] 2 #>  #>  #> [[1]]$Token[[13]] #> [[1]]$Token[[13]]$form #> [1] \"하\" #>  #> [[1]]$Token[[13]]$tag #> [1] \"XSV\" #>  #> [[1]]$Token[[13]]$start #> [1] 42 #>  #> [[1]]$Token[[13]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[14]] #> [[1]]$Token[[14]]$form #> [1] \"ᆸ니다\" #>  #> [[1]]$Token[[14]]$tag #> [1] \"EF\" #>  #> [[1]]$Token[[14]]$start #> [1] 42 #>  #> [[1]]$Token[[14]]$len #> [1] 3 #>  #>  #> [[1]]$Token[[15]] #> [[1]]$Token[[15]]$form #> [1] \".\" #>  #> [[1]]$Token[[15]]$tag #> [1] \"SF\" #>  #> [[1]]$Token[[15]]$start #> [1] 45 #>  #> [[1]]$Token[[15]]$len #> [1] 1 #>  #>  #>  #> [[1]]$Score #> [1] -91.58401"},{"path":"https://mrchypark.github.io/elbird/articles/README_kr.html","id":"형태소-태그","dir":"Articles","previous_headings":"elbird","what":"형태소 태그","title":"","text":"kiwipiepy패키지에서 사용하는 형태소 태그는 아래와 같습니다. table fetched 2022-06-17 16:31:42 UTC.","code":""},{"path":[]},{"path":"https://mrchypark.github.io/elbird/articles/README_kr.html","id":"kiwi-패키지","dir":"Articles","previous_headings":"elbird > 특별히 감사합니다","what":"kiwi 패키지","title":"","text":"kiwi 패키지 제작자 이신 bab2min님께 감사드립니다.","code":""},{"path":"https://mrchypark.github.io/elbird/articles/README_kr.html","id":"logo","dir":"Articles","previous_headings":"elbird > 특별히 감사합니다","what":"logo","title":"","text":"로고 제작에 의견을 주신 jhk0530님께 감사드립니다.","code":""},{"path":"https://mrchypark.github.io/elbird/articles/README_kr.html","id":"cpp-backend","dir":"Articles","previous_headings":"elbird > 특별히 감사합니다","what":"cpp backend","title":"","text":"패키지 개발에 도움을 주신 kkweon님께 감사드립니다.","code":""},{"path":"https://mrchypark.github.io/elbird/articles/extract-words.html","id":"텍스트-데이터에서-명사-추출","dir":"Articles","previous_headings":"","what":"텍스트 데이터에서 명사 추출","title":"","text":"kiwi는 soynlp의 단어 추출의 아이디어를 사용해서 해당 기능을 제공합니다. elbird 역시 kiwi에서 제공하는 extract_words() 메소드를 제공합니다. 우선 헌법을 예시 데이터로 가져와보겠습니다. 그럼 이제 이 데이터를 기준으로 단어 추출을 해보겠습니다. 우선 입력은 텍스트 파일의 경로만 가능합니다.min_cnt는 문서 내에 최소한 출현한 횟수입니다. 그래도 이만큼은 나와야 단어로 보겠다는 뜻입니다.max_word_len은 최대 단어의 길이입니다. 예를 들어 가까운목장의신선한원유로만든저지방우유는 19자 인데, 이렇게 긴 단어는 필요 없을 수 있습니다.min_score는 단어 점수입니다. 기본값은 0.25이며 출력에 score 컬럼으로 제공됩니다. 처음에는 기본값을, 추출이 너무 없으면 0으로 값을 보고 조절하시면 됩니다.pos_threshold는 명사 점수로 기존값은 -3 입니다. 이 값을 낮출수록 명사가 아닌 단어들이 추출될 가능성이 높으며, 반대로 높일수록 추출되는 명사의 개수가 줄어듭니다. 오 뭔가 결과가 좋습니다. 이제부터 어떤 과정을 거쳤는지 살펴보겠습니다.","code":"library(elbird) library(vroom) kw <- Kiwi$new() text <- vroom_lines(\"test.txt\") head(text) #> [1] \"대한민국헌법유구한 역사와 전통에 빛나는 우리 대한국민은 3·1운동으로 건립된 대한민국임시정부의 법통과 불의에 항거한 4·19민주이념을 계승하고, 조국의 민주개혁과 평화적 통일의 사명에 입각하여 정의·인도와 동포애로써 민족의 단결을 공고히 하고, 모든 사회적 폐습과 불의를 타파하며, 자율과 조화를 바탕으로 자유민주적 기본질서를 더욱 확고히 하여 정치·경제·사회·문화의 모든 영역에 있어서 각인의 기회를 균등히 하고, 능력을 최고도로 발휘하게 하며, 자유와 권리에 따르는 책임과 의무를 완수하게 하여, 안으로는 국민생활의 균등한 향상을 기하고 밖으로는 항구적인 세계평화와 인류공영에 이바지함으로써 우리들과 우리들의 자손의 안전과 자유와 행복을 영원히 확보할 것을 다짐하면서 1948년 7월 12일에 제정되고 8차에 걸쳐 개정된 헌법을 이제 국회의 의결을 거쳐 국민투표에 의하여 개정한다.\" #> [3] \"       제1장 총강제1조 ① 대한민국은 민주공화국이다②대한민국의 주권은 국민에게 있고, 모든 권력은 국민으로부터 나온다제2조 ① 대한민국의 국민이 되는 요건은 법률로 정한다.\" kw$extract_words(input = \"test.txt\",                  min_cnt = 3,                  max_word_len = 8,                  min_score = 0.2,                  pos_threshold = -2) #> # A tibble: 7 × 4 #>   form         tag_score   freq score #>   <chr>            <int>  <dbl> <dbl> #> 1 무원                20 -0.741 1.05  #> 2 지방자치단체         6 -0.399 0.757 #> 3 안전보장            10 -1.22  0.366 #> 4 헌법개정안           5 -1.21  0.359 #> 5 행정각부             7  0.683 0.338 #> 6 국가안전보장         5  0.186 0.297 #> 7 헌법개정            10 -1.79  0.272"},{"path":"https://mrchypark.github.io/elbird/articles/kiwi-class.html","id":"kiwi-class-api","dir":"Articles","previous_headings":"","what":"Kiwi Class API","title":"","text":"elbird는 간단하게 바로 사용할 수 있는 함수 api(tokenize(), analyze(), split_into_sents())를 제공합니다. 하지만 더욱 복잡한 동작에 대한 요구는 당연히 있겠죠. 그래서 Kiwi 클래스 api를 제공합니다. kiwi는 분석기 모델을 3가지로 제공합니다. small, base, large, 함수 api에서는 small을 사용하고 있으며, 아직 변경 방법을 제공하고 있지 않습니다. Kiwi 클래스는 생성시 크기를 지정할 수 있습니다. 이렇게 만든 Kiwi의 객체는 몇 가지 메소드를 제공합니다. 우선 당연히 tokenize() 와 analyze()를 제공합니다. 그리고 사용자의 추가 단어를 등록할 수 있습니다. elbird는 tidytext와 함께 사용할 수 있습니다. 그럼 예시 데이터를 준비해보겠습니다. get_tidytext_func() 메소드는 tidytext의 unnest_tokens() 함수와 동작하는 함수를 리턴합니다. Stopwords 를 추가해서 사용해보겠습니다. 사용자 단어 사전도 추가해서 진행해보겠습니다.","code":"library(elbird) kw <- Kiwi$new() kw #> <kiwi class>  #>   model: base kwl <- Kiwi$new(model_size = \"large\") kwl #> <kiwi class>  #>   model: large kw$tokenize(\"안녕하세요.\") #> # A tibble: 5 × 5 #>   sent  form  tag   start   len #>   <chr> <chr> <chr> <int> <int> #> 1 1     안녕  NNG       1     2 #> 2 1     하    XSA       3     1 #> 3 1     시    EP        4     1 #> 4 1     어요  EF        4     2 #> 5 1     .     SF        6     1 kw$analyze(\"안녕하세요.\") #> [[1]] #> [[1]]$Token #> [[1]]$Token[[1]] #> [[1]]$Token[[1]]$form #> [1] \"안녕\" #>  #> [[1]]$Token[[1]]$tag #> [1] \"NNG\" #>  #> [[1]]$Token[[1]]$start #> [1] 1 #>  #> [[1]]$Token[[1]]$len #> [1] 2 #>  #>  #> [[1]]$Token[[2]] #> [[1]]$Token[[2]]$form #> [1] \"하\" #>  #> [[1]]$Token[[2]]$tag #> [1] \"XSA\" #>  #> [[1]]$Token[[2]]$start #> [1] 3 #>  #> [[1]]$Token[[2]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[3]] #> [[1]]$Token[[3]]$form #> [1] \"시\" #>  #> [[1]]$Token[[3]]$tag #> [1] \"EP\" #>  #> [[1]]$Token[[3]]$start #> [1] 4 #>  #> [[1]]$Token[[3]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[4]] #> [[1]]$Token[[4]]$form #> [1] \"어요\" #>  #> [[1]]$Token[[4]]$tag #> [1] \"EF\" #>  #> [[1]]$Token[[4]]$start #> [1] 4 #>  #> [[1]]$Token[[4]]$len #> [1] 2 #>  #>  #> [[1]]$Token[[5]] #> [[1]]$Token[[5]]$form #> [1] \".\" #>  #> [[1]]$Token[[5]]$tag #> [1] \"SF\" #>  #> [[1]]$Token[[5]]$start #> [1] 6 #>  #> [[1]]$Token[[5]]$len #> [1] 1 #>  #>  #>  #> [[1]]$Score #> [1] -10.18221 #>  #>  #> [[2]] #> [[2]]$Token #> [[2]]$Token[[1]] #> [[2]]$Token[[1]]$form #> [1] \"안녕\" #>  #> [[2]]$Token[[1]]$tag #> [1] \"NNG\" #>  #> [[2]]$Token[[1]]$start #> [1] 1 #>  #> [[2]]$Token[[1]]$len #> [1] 2 #>  #>  #> [[2]]$Token[[2]] #> [[2]]$Token[[2]]$form #> [1] \"하\" #>  #> [[2]]$Token[[2]]$tag #> [1] \"XSA\" #>  #> [[2]]$Token[[2]]$start #> [1] 3 #>  #> [[2]]$Token[[2]]$len #> [1] 1 #>  #>  #> [[2]]$Token[[3]] #> [[2]]$Token[[3]]$form #> [1] \"시\" #>  #> [[2]]$Token[[3]]$tag #> [1] \"EP\" #>  #> [[2]]$Token[[3]]$start #> [1] 4 #>  #> [[2]]$Token[[3]]$len #> [1] 1 #>  #>  #> [[2]]$Token[[4]] #> [[2]]$Token[[4]]$form #> [1] \"어요\" #>  #> [[2]]$Token[[4]]$tag #> [1] \"EF\" #>  #> [[2]]$Token[[4]]$start #> [1] 4 #>  #> [[2]]$Token[[4]]$len #> [1] 2 #>  #>  #> [[2]]$Token[[5]] #> [[2]]$Token[[5]]$form #> [1] \".\" #>  #> [[2]]$Token[[5]]$tag #> [1] \"SF\" #>  #> [[2]]$Token[[5]]$start #> [1] 6 #>  #> [[2]]$Token[[5]]$len #> [1] 1 #>  #>  #>  #> [[2]]$Score #> [1] -10.18221 #>  #>  #> [[3]] #> [[3]]$Token #> [[3]]$Token[[1]] #> [[3]]$Token[[1]]$form #> [1] \"안녕\" #>  #> [[3]]$Token[[1]]$tag #> [1] \"NNG\" #>  #> [[3]]$Token[[1]]$start #> [1] 1 #>  #> [[3]]$Token[[1]]$len #> [1] 2 #>  #>  #> [[3]]$Token[[2]] #> [[3]]$Token[[2]]$form #> [1] \"하\" #>  #> [[3]]$Token[[2]]$tag #> [1] \"XSA\" #>  #> [[3]]$Token[[2]]$start #> [1] 3 #>  #> [[3]]$Token[[2]]$len #> [1] 1 #>  #>  #> [[3]]$Token[[3]] #> [[3]]$Token[[3]]$form #> [1] \"시\" #>  #> [[3]]$Token[[3]]$tag #> [1] \"EP\" #>  #> [[3]]$Token[[3]]$start #> [1] 4 #>  #> [[3]]$Token[[3]]$len #> [1] 1 #>  #>  #> [[3]]$Token[[4]] #> [[3]]$Token[[4]]$form #> [1] \"어요\" #>  #> [[3]]$Token[[4]]$tag #> [1] \"EF\" #>  #> [[3]]$Token[[4]]$start #> [1] 4 #>  #> [[3]]$Token[[4]]$len #> [1] 2 #>  #>  #> [[3]]$Token[[5]] #> [[3]]$Token[[5]]$form #> [1] \".\" #>  #> [[3]]$Token[[5]]$tag #> [1] \"SF\" #>  #> [[3]]$Token[[5]]$start #> [1] 6 #>  #> [[3]]$Token[[5]]$len #> [1] 1 #>  #>  #>  #> [[3]]$Score #> [1] -10.18221 kw$tokenize(\"박박사입니다.\") #> # A tibble: 5 × 5 #>   sent  form  tag   start   len #>   <chr> <chr> <chr> <int> <int> #> 1 1     박    NNP       1     1 #> 2 1     박사  NNG       2     2 #> 3 1     이    VCP       4     1 #> 4 1     ᆸ니다 EF        4     3 #> 5 1     .     SF        7     1 kw$add_user_word(\"박박사\", Tags$nnb, 0) kw$tokenize(\"박박사입니다.\") #> # A tibble: 4 × 5 #>   sent  form   tag   start   len #>   <chr> <chr>  <chr> <int> <int> #> 1 1     박박사 NNB       1     3 #> 2 1     이     VCP       4     1 #> 3 1     ᆸ니다  EF        4     3 #> 4 1     .      SF        7     1 # 텍스트 데이터는 presidentSpeech 패키지를 사용했습니다. # install.packages(\"presidentSpeech\", repos = \"https://forkonlp.r-universe.dev/\")  library(vroom) tar <- vroom(\"exam.txt\") #> Rows: 62 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (1): content #> dbl (1): paragraph #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. tar #> # A tibble: 62 × 2 #>    paragraph content                                                             #>        <dbl> <chr>                                                               #>  1         1 존경하는 국민 여러분!                                               #>  2         2 700만 해외동포 여러분!                                              #>  3         3 이 자리에 참석하신 노무현ㆍ김대중ㆍ김영삼ㆍ전두환 전 대통령, 그리…  #>  4         4 저는 오늘 국민 여러분의 부름을 받고 대한민국의 제17대 대통령에 취…  #>  5         5 저는 이 자리에서 국민 여러분께 약속드립니다. 국민을 섬겨 나라를 편… #>  6         6 올해로 대한민국 건국 60주년을 맞이합니다. 우리는 잃었던 땅을 되찾…  #>  7         7 지구 상에서 가장 가난했던 나라가 세계 10위권의 경제 대국이 되었습…  #>  8         8 그러나 우리는 알고 있습니다. 그것은 기적이 아니라 우리가 다 함께 …  #>  9         9 독립을 위해 목숨을 바친 선열들, 전선에서 산화한 장병들, 뙤약볕과 …  #> 10        10 장롱 속 금붙이를 들고나와 외환위기에 맞섰던 시민들, 겨울 바닷가에…  #> # … with 52 more rows library(tidytext)  token_func <- kw$get_tidytext_func() unnest_tokens(   tar,   input = content,   output = word,   token = tokenize_tidy ) #> # A tibble: 2,117 × 2 #>    paragraph word      #>        <dbl> <chr>     #>  1         1 존경/nng  #>  2         1 국민/nng  #>  3         1 여러분/np #>  4         2 700/sn    #>  5         2 해외/nng  #>  6         2 동포/nng  #>  7         2 여러분/np #>  8         3 자리/nng  #>  9         3 참석/nng  #> 10         3 시/ep     #> # … with 2,107 more rows sw <- Stopwords$new(FALSE) sw$add(tag = Tags$sf) sw$add(\"는\", Tags$etm)  token_func <- kw$get_tidytext_func(stopwords = sw) unnest_tokens(   tar,   input = content,   output = word,   token = token_func ) #> # A tibble: 4,223 × 2 #>    paragraph word      #>        <dbl> <chr>     #>  1         1 존경/nng  #>  2         1 하/xsv    #>  3         1 국민/nng  #>  4         1 여러분/np #>  5         2 700/sn    #>  6         2 만/nr     #>  7         2 해외/nng  #>  8         2 동포/nng  #>  9         2 여러분/np #> 10         3 이/mm     #> # … with 4,213 more rows library(elbird) kw <- Kiwi$new() kw$add_user_word(\"해외동포\", Tags$nng, 0)  sw <- Stopwords$new(FALSE) sw$add(tag = Tags$sf) sw$add(\"는\", Tags$etm)  token_func <- kw$get_tidytext_func(stopwords = sw) unnest_tokens(   tar,   input = content,   output = word,   token = token_func ) #> # A tibble: 4,222 × 2 #>    paragraph word         #>        <dbl> <chr>        #>  1         1 존경/nng     #>  2         1 하/xsv       #>  3         1 국민/nng     #>  4         1 여러분/np    #>  5         2 700/sn       #>  6         2 만/nr        #>  7         2 해외동포/nng #>  8         2 여러분/np    #>  9         3 이/mm        #> 10         3 자리/nng     #> # … with 4,212 more rows"},{"path":"https://mrchypark.github.io/elbird/articles/stopwords.html","id":"불용어-사전","dir":"Articles","previous_headings":"","what":"불용어 사전","title":"","text":"elbird의 tokenize() 함수는 stopwords 파라미터를 받습니다. 설계상 Stopwords 클래스를 사용하도록 되어 있습니다. 그럼 Stopwords 클래스를 만들어보겠습니다. elbird는 kiwi가 제공하는 내장 불용어 사전을 기본으로 가져옵니다. 모두 106개의 불용어를 가지고 있네요. 불용어가 무엇이 있는지 확인하려면 get() 메소드를 사용하면 됩니다. tibble 자료형을 기본으로 합니다. 내용을 보면 form과 tag로 이루어져있습니다. form은 7번째 줄을 보시면 아시겠지만, 해당 글자를 뜻합니다. tag는 형태소를 뜻하겠죠. form이 NA인 형태소가 있는데요. 이것은 이 형태소 전체를 불용어로 등록하는 것입니다. 현재 기본 사전에는 마침표등을 뜻하는 형태소는 모두 불용어로 처리하고 있습니다. 그럼 자체 단어를 추가해보겠습니다. 그 전에, 비어있는 불용어 사전을 먼저 만들고 시작하겠습니다. 이제 추가하면 눈에 띌테니 좋네요. form인 글자를 add() 메소드를 이용해 등록해주면 기본 형태소인 NNP와 함께 등록됩니다. 다른 형태소는 형태소를 추가해서 add() 메소드를 사용하시면 됩니다. 현재 Stopwords 객체가 자신이 관리하는 사전을 저장할 수 있습니다. 사전은 아래와 같이 저장됩니다. 이 양식은 kiwipiepy와 호환됩니다. 컬럼 이름은 없고, form/tag 양식이며 tag만 등록하는 경우, 아래와 같이 생략하면 됩니다. 이렇게 구성된 사전은 Stopwords에서 불러와 사용할 수 있습니다. 그럼 이제 사용해 볼까요? 특이하게 안녕이 필요없다고 생각하고 불용어 사전을 추가해보겠습니다. 이제 불용어 사전은 Stopwords 를 사용해주세요.","code":"library(elbird)  tokenize(\"안녕하세요.\", stopwords = TRUE) #> # A tibble: 3 × 5 #>   sent  form  tag   start   len #>   <chr> <chr> <chr> <int> <int> #> 1 1     안녕  NNG       1     2 #> 2 1     시    EP        4     1 #> 3 1     어요  EF        4     2 tokenize(\"안녕하세요.\", stopwords = FALSE) #> # A tibble: 5 × 5 #>   sent  form  tag   start   len #>   <chr> <chr> <chr> <int> <int> #> 1 1     안녕  NNG       1     2 #> 2 1     하    XSA       3     1 #> 3 1     시    EP        4     1 #> 4 1     어요  EF        4     2 #> 5 1     .     SF        6     1 sw <- Stopwords$new() sw #> <stopwords dict> #>   word count: 106 sw$get() #> # A tibble: 106 × 2 #>    form  tag   #>    <chr> <chr> #>  1 NA    SF    #>  2 NA    SP    #>  3 NA    SS    #>  4 NA    SE    #>  5 NA    SO    #>  6 NA    SW    #>  7 하    XSV   #>  8 을    JKO   #>  9 ᆫ     ETM   #> 10 다    EF    #> # … with 96 more rows sw <- Stopwords$new(use_system_dict = FALSE) sw #> <stopwords dict> #>   word count: 0 sw$add(\"한숨\") sw #> <stopwords dict> #>   word count: 1 sw$get() #> # A tibble: 1 × 2 #>   form  tag   #>   <chr> <chr> #> 1 한숨  NNP ## 들숨의 형태소는 vv가 아닙니다! 예시로 넣은 것일 뿐... sw$add(\"들숨\", Tags$vv) sw$ sw$get() sw$add(tag = Tags$vv) sw$save_dict(\"user_dict.txt\") /VV 한숨/NNP sw <- Stopwords$new(F) sw #> <stopwords dict> #>   word count: 0 sw$add_from_dict(\"user_dict.txt\") sw #> <stopwords dict> #>   word count: 2 sw$get() #> # A tibble: 2 × 2 #>   form  tag   #>   <chr> <chr> #> 1 한숨  NNP   #> 2 NA    VV tokenize(\"안녕하세요\", stopwords = F) #> # A tibble: 4 × 5 #>   sent  form  tag   start   len #>   <chr> <chr> <chr> <int> <int> #> 1 1     안녕  NNG       1     2 #> 2 1     하    XSA       3     1 #> 3 1     시    EP        4     1 #> 4 1     어요  EF        4     2 sw <- Stopwords$new(F) sw$add(\"안녕\", Tags$nng) tokenize(\"안녕하세요\", stopwords = sw) #> # A tibble: 3 × 5 #>   sent  form  tag   start   len #>   <chr> <chr> <chr> <int> <int> #> 1 1     하    XSA       3     1 #> 2 1     시    EP        4     1 #> 3 1     어요  EF        4     2"},{"path":"https://mrchypark.github.io/elbird/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Chanyub Park. Author, maintainer.","code":""},{"path":"https://mrchypark.github.io/elbird/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Park C (2022). elbird: Blazing Fast Morphological Analyzer Based Kiwi(Korean Intelligent Word Identifier). R package version 0.2.3, https://github.com/mrchypark/elbird/.","code":"@Manual{,   title = {elbird: Blazing Fast Morphological Analyzer Based on Kiwi(Korean Intelligent Word Identifier)},   author = {Chanyub Park},   year = {2022},   note = {R package version 0.2.3},   url = {https://github.com/mrchypark/elbird/}, }"},{"path":"https://mrchypark.github.io/elbird/index.html","id":"elbird-","dir":"","previous_headings":"","what":"Blazing Fast Morphological Analyzer Based on Kiwi(Korean Intelligent Word Identifier)","title":"Blazing Fast Morphological Analyzer Based on Kiwi(Korean Intelligent Word Identifier)","text":"Korean version README elbird package morpheme analysis package packed Kiwi. based cpp package Kiwi convenient functions faster performance compared tokenizers, easy user dictionary addition, unregistered noun extraction, etc.","code":""},{"path":"https://mrchypark.github.io/elbird/index.html","id":"logo","dir":"","previous_headings":"","what":"logo","title":"Blazing Fast Morphological Analyzer Based on Kiwi(Korean Intelligent Word Identifier)","text":"Wings icons created Good Ware - FlaticonAfrica icons created Eucalyp - Flaticon","code":""},{"path":"https://mrchypark.github.io/elbird/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Blazing Fast Morphological Analyzer Based on Kiwi(Korean Intelligent Word Identifier)","text":"can install elbird :","code":"# CRAN install.packages(\"elbird\")  # Dev version install.packages(\"elbird\", repos = 'https://mrchypark.r-universe.dev')"},{"path":"https://mrchypark.github.io/elbird/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Blazing Fast Morphological Analyzer Based on Kiwi(Korean Intelligent Word Identifier)","text":"examples introduce behavior elbird’s functions.","code":""},{"path":"https://mrchypark.github.io/elbird/index.html","id":"tokenize","dir":"","previous_headings":"Example","what":"tokenize","title":"Blazing Fast Morphological Analyzer Based on Kiwi(Korean Intelligent Word Identifier)","text":"Basically, tokenize function return list form tokenize_tbl organized tibble data type, grammar compatibility tidytext supported provides tokenize_tidy function. Multiple sentences input vector list output list.","code":"library(elbird) tokenize(\"안녕하세요 kiwi 형태소 분석기의 R wrapper인 elbird를 소개합니다.\") #> # A tibble: 9 × 5 #>   sent  form       tag   start   len #>   <chr> <chr>      <chr> <int> <int> #> 1 1     안녕하세요 NNP       1     5 #> 2 1     kiwi       SL        7     4 #> 3 1     형태소     NNG      12     3 #> 4 1     분석기     NNG      16     3 #> 5 1     R          SL       21     1 #> 6 1     wrapper    SL       23     7 #> 7 1     elbird     SL       32     6 #> 8 1     소개       NNG      40     2 #> 9 1     ᆸ니다      EF       42     3 tokenize_tidy(\"안녕하세요 kiwi 형태소 분석기의 R wrapper인 elbird를 소개합니다.\") #> [[1]] #> [1] \"안녕하세요/NNP\" \"kiwi/SL\"        \"형태소/NNG\"     \"분석기/NNG\"     #> [5] \"R/SL\"           \"wrapper/SL\"     \"elbird/SL\"      \"소개/NNG\"       #> [9] \"ᆸ니다/EF\" tokenize(c(\"새롭게 작성된 패키지 입니다.\", \"tidytext와의 호환을 염두하고 작성하였습니다.\")) #> # A tibble: 9 × 5 #>   sent  form     tag   start   len #>   <chr> <chr>    <chr> <int> <int> #> 1 1     새롭     VA        1     2 #> 2 1     작성     NNG       5     2 #> 3 1     패키지   NNG       9     3 #> 4 1     ᆸ니다    EF       13     3 #> 5 2     tidytext SL        1     8 #> 6 2     호환     NNG      12     2 #> 7 2     염두     NNG      16     2 #> 8 2     작성     NNG      21     2 #> 9 2     습니다   EF       25     3 tokenize_tidy(c(\"새롭게 작성된 패키지 입니다.\", \"tidytext와의 호환을 염두하고 작성하였습니다.\")) #> [[1]] #> [1] \"새롭/VA\"    \"작성/NNG\"   \"패키지/NNG\" \"ᆸ니다/EF\"    #>  #> [[2]] #> [1] \"tidytext/SL\" \"호환/NNG\"    \"염두/NNG\"    \"작성/NNG\"    \"습니다/EF\""},{"path":"https://mrchypark.github.io/elbird/index.html","id":"with-tidytext","dir":"","previous_headings":"Example","what":"With tidytext","title":"Blazing Fast Morphological Analyzer Based on Kiwi(Korean Intelligent Word Identifier)","text":"tokenize_tidy function can also used tokenize_tt tokenize_tidytext. example using tidytext package. tar target text morpheme analysis. example using tokenize_tidy elbird tokenizer tar unnest_tokens function tidytext package.","code":"suppressMessages(library(dplyr)) # install.packages(\"presidentSpeech\", repos = \"https://forkonlp.r-universe.dev/\") library(stringr) library(tidytext) library(presidentSpeech)  spidx %>%    filter(president == \"이명박\") %>%    filter(str_detect(title, \"취임사\")) %>%    pull(link) %>%    get_speech(paragraph = T) %>%   select(paragraph, content) -> tar tar #> # A tibble: 62 × 2 #>    paragraph content                                                             #>        <int> <chr>                                                               #>  1         1 존경하는 국민 여러분!                                               #>  2         2 700만 해외동포 여러분!                                              #>  3         3 이 자리에 참석하신 노무현ㆍ김대중ㆍ김영삼ㆍ전두환 전 대통령, 그리…  #>  4         4 저는 오늘 국민 여러분의 부름을 받고 대한민국의 제17대 대통령에 취…  #>  5         5 저는 이 자리에서 국민 여러분께 약속드립니다. 국민을 섬겨 나라를 편… #>  6         6 올해로 대한민국 건국 60주년을 맞이합니다. 우리는 잃었던 땅을 되찾…  #>  7         7 지구 상에서 가장 가난했던 나라가 세계 10위권의 경제 대국이 되었습…  #>  8         8 그러나 우리는 알고 있습니다. 그것은 기적이 아니라 우리가 다 함께 …  #>  9         9 독립을 위해 목숨을 바친 선열들, 전선에서 산화한 장병들, 뙤약볕과 …  #> 10        10 장롱 속 금붙이를 들고나와 외환위기에 맞섰던 시민들, 겨울 바닷가에…  #> # … with 52 more rows tar %>%    unnest_tokens(     input = content,     output = word,     token = tokenize_tidy     ) #> # A tibble: 2,119 × 2 #>    paragraph word      #>        <int> <chr>     #>  1         1 존경/nng  #>  2         1 국민/nng  #>  3         1 여러분/np #>  4         2 700/sn    #>  5         2 해외/nng  #>  6         2 동포/nng  #>  7         2 여러분/np #>  8         3 자리/nng  #>  9         3 참석/nng  #> 10         3 시/ep     #> # … with 2,109 more rows"},{"path":"https://mrchypark.github.io/elbird/index.html","id":"analyze","dir":"","previous_headings":"Example","what":"analyze","title":"Blazing Fast Morphological Analyzer Based on Kiwi(Korean Intelligent Word Identifier)","text":"addition, analyze function provided uses output multi-result score.","code":"library(elbird) analyze(\"안녕하세요 kiwi 형태소 분석기의 R wrapper인 elbird를 소개합니다.\") #> [[1]] #> [[1]]$Token #> [[1]]$Token[[1]] #> [[1]]$Token[[1]]$form #> [1] \"안녕하세요\" #>  #> [[1]]$Token[[1]]$tag #> [1] \"NNP\" #>  #> [[1]]$Token[[1]]$start #> [1] 1 #>  #> [[1]]$Token[[1]]$len #> [1] 5 #>  #>  #> [[1]]$Token[[2]] #> [[1]]$Token[[2]]$form #> [1] \"kiwi\" #>  #> [[1]]$Token[[2]]$tag #> [1] \"SL\" #>  #> [[1]]$Token[[2]]$start #> [1] 7 #>  #> [[1]]$Token[[2]]$len #> [1] 4 #>  #>  #> [[1]]$Token[[3]] #> [[1]]$Token[[3]]$form #> [1] \"형태소\" #>  #> [[1]]$Token[[3]]$tag #> [1] \"NNG\" #>  #> [[1]]$Token[[3]]$start #> [1] 12 #>  #> [[1]]$Token[[3]]$len #> [1] 3 #>  #>  #> [[1]]$Token[[4]] #> [[1]]$Token[[4]]$form #> [1] \"분석기\" #>  #> [[1]]$Token[[4]]$tag #> [1] \"NNG\" #>  #> [[1]]$Token[[4]]$start #> [1] 16 #>  #> [[1]]$Token[[4]]$len #> [1] 3 #>  #>  #> [[1]]$Token[[5]] #> [[1]]$Token[[5]]$form #> [1] \"의\" #>  #> [[1]]$Token[[5]]$tag #> [1] \"JKG\" #>  #> [[1]]$Token[[5]]$start #> [1] 19 #>  #> [[1]]$Token[[5]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[6]] #> [[1]]$Token[[6]]$form #> [1] \"R\" #>  #> [[1]]$Token[[6]]$tag #> [1] \"SL\" #>  #> [[1]]$Token[[6]]$start #> [1] 21 #>  #> [[1]]$Token[[6]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[7]] #> [[1]]$Token[[7]]$form #> [1] \"wrapper\" #>  #> [[1]]$Token[[7]]$tag #> [1] \"SL\" #>  #> [[1]]$Token[[7]]$start #> [1] 23 #>  #> [[1]]$Token[[7]]$len #> [1] 7 #>  #>  #> [[1]]$Token[[8]] #> [[1]]$Token[[8]]$form #> [1] \"이\" #>  #> [[1]]$Token[[8]]$tag #> [1] \"VCP\" #>  #> [[1]]$Token[[8]]$start #> [1] 30 #>  #> [[1]]$Token[[8]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[9]] #> [[1]]$Token[[9]]$form #> [1] \"ᆫ\" #>  #> [[1]]$Token[[9]]$tag #> [1] \"ETM\" #>  #> [[1]]$Token[[9]]$start #> [1] 30 #>  #> [[1]]$Token[[9]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[10]] #> [[1]]$Token[[10]]$form #> [1] \"elbird\" #>  #> [[1]]$Token[[10]]$tag #> [1] \"SL\" #>  #> [[1]]$Token[[10]]$start #> [1] 32 #>  #> [[1]]$Token[[10]]$len #> [1] 6 #>  #>  #> [[1]]$Token[[11]] #> [[1]]$Token[[11]]$form #> [1] \"를\" #>  #> [[1]]$Token[[11]]$tag #> [1] \"JKO\" #>  #> [[1]]$Token[[11]]$start #> [1] 38 #>  #> [[1]]$Token[[11]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[12]] #> [[1]]$Token[[12]]$form #> [1] \"소개\" #>  #> [[1]]$Token[[12]]$tag #> [1] \"NNG\" #>  #> [[1]]$Token[[12]]$start #> [1] 40 #>  #> [[1]]$Token[[12]]$len #> [1] 2 #>  #>  #> [[1]]$Token[[13]] #> [[1]]$Token[[13]]$form #> [1] \"하\" #>  #> [[1]]$Token[[13]]$tag #> [1] \"XSV\" #>  #> [[1]]$Token[[13]]$start #> [1] 42 #>  #> [[1]]$Token[[13]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[14]] #> [[1]]$Token[[14]]$form #> [1] \"ᆸ니다\" #>  #> [[1]]$Token[[14]]$tag #> [1] \"EF\" #>  #> [[1]]$Token[[14]]$start #> [1] 42 #>  #> [[1]]$Token[[14]]$len #> [1] 3 #>  #>  #> [[1]]$Token[[15]] #> [[1]]$Token[[15]]$form #> [1] \".\" #>  #> [[1]]$Token[[15]]$tag #> [1] \"SF\" #>  #> [[1]]$Token[[15]]$start #> [1] 45 #>  #> [[1]]$Token[[15]]$len #> [1] 1 #>  #>  #>  #> [[1]]$Score #> [1] -91.58401 #>  #>  #> [[2]] #> [[2]]$Token #> [[2]]$Token[[1]] #> [[2]]$Token[[1]]$form #> [1] \"안녕\" #>  #> [[2]]$Token[[1]]$tag #> [1] \"NNG\" #>  #> [[2]]$Token[[1]]$start #> [1] 1 #>  #> [[2]]$Token[[1]]$len #> [1] 2 #>  #>  #> [[2]]$Token[[2]] #> [[2]]$Token[[2]]$form #> [1] \"하\" #>  #> [[2]]$Token[[2]]$tag #> [1] \"XSA\" #>  #> [[2]]$Token[[2]]$start #> [1] 3 #>  #> [[2]]$Token[[2]]$len #> [1] 1 #>  #>  #> [[2]]$Token[[3]] #> [[2]]$Token[[3]]$form #> [1] \"시\" #>  #> [[2]]$Token[[3]]$tag #> [1] \"EP\" #>  #> [[2]]$Token[[3]]$start #> [1] 4 #>  #> [[2]]$Token[[3]]$len #> [1] 1 #>  #>  #> [[2]]$Token[[4]] #> [[2]]$Token[[4]]$form #> [1] \"어요\" #>  #> [[2]]$Token[[4]]$tag #> [1] \"EF\" #>  #> [[2]]$Token[[4]]$start #> [1] 4 #>  #> [[2]]$Token[[4]]$len #> [1] 2 #>  #>  #> [[2]]$Token[[5]] #> [[2]]$Token[[5]]$form #> [1] \"kiwi\" #>  #> [[2]]$Token[[5]]$tag #> [1] \"SL\" #>  #> [[2]]$Token[[5]]$start #> [1] 7 #>  #> [[2]]$Token[[5]]$len #> [1] 4 #>  #>  #> [[2]]$Token[[6]] #> [[2]]$Token[[6]]$form #> [1] \"형태소\" #>  #> [[2]]$Token[[6]]$tag #> [1] \"NNG\" #>  #> [[2]]$Token[[6]]$start #> [1] 12 #>  #> [[2]]$Token[[6]]$len #> [1] 3 #>  #>  #> [[2]]$Token[[7]] #> [[2]]$Token[[7]]$form #> [1] \"분석기\" #>  #> [[2]]$Token[[7]]$tag #> [1] \"NNG\" #>  #> [[2]]$Token[[7]]$start #> [1] 16 #>  #> [[2]]$Token[[7]]$len #> [1] 3 #>  #>  #> [[2]]$Token[[8]] #> [[2]]$Token[[8]]$form #> [1] \"의\" #>  #> [[2]]$Token[[8]]$tag #> [1] \"JKG\" #>  #> [[2]]$Token[[8]]$start #> [1] 19 #>  #> [[2]]$Token[[8]]$len #> [1] 1 #>  #>  #> [[2]]$Token[[9]] #> [[2]]$Token[[9]]$form #> [1] \"R\" #>  #> [[2]]$Token[[9]]$tag #> [1] \"SL\" #>  #> [[2]]$Token[[9]]$start #> [1] 21 #>  #> [[2]]$Token[[9]]$len #> [1] 1 #>  #>  #> [[2]]$Token[[10]] #> [[2]]$Token[[10]]$form #> [1] \"wrapper\" #>  #> [[2]]$Token[[10]]$tag #> [1] \"SL\" #>  #> [[2]]$Token[[10]]$start #> [1] 23 #>  #> [[2]]$Token[[10]]$len #> [1] 7 #>  #>  #> [[2]]$Token[[11]] #> [[2]]$Token[[11]]$form #> [1] \"이\" #>  #> [[2]]$Token[[11]]$tag #> [1] \"VCP\" #>  #> [[2]]$Token[[11]]$start #> [1] 30 #>  #> [[2]]$Token[[11]]$len #> [1] 1 #>  #>  #> [[2]]$Token[[12]] #> [[2]]$Token[[12]]$form #> [1] \"ᆫ\" #>  #> [[2]]$Token[[12]]$tag #> [1] \"ETM\" #>  #> [[2]]$Token[[12]]$start #> [1] 30 #>  #> [[2]]$Token[[12]]$len #> [1] 1 #>  #>  #> [[2]]$Token[[13]] #> [[2]]$Token[[13]]$form #> [1] \"elbird\" #>  #> [[2]]$Token[[13]]$tag #> [1] \"SL\" #>  #> [[2]]$Token[[13]]$start #> [1] 32 #>  #> [[2]]$Token[[13]]$len #> [1] 6 #>  #>  #> [[2]]$Token[[14]] #> [[2]]$Token[[14]]$form #> [1] \"를\" #>  #> [[2]]$Token[[14]]$tag #> [1] \"JKO\" #>  #> [[2]]$Token[[14]]$start #> [1] 38 #>  #> [[2]]$Token[[14]]$len #> [1] 1 #>  #>  #> [[2]]$Token[[15]] #> [[2]]$Token[[15]]$form #> [1] \"소개\" #>  #> [[2]]$Token[[15]]$tag #> [1] \"NNG\" #>  #> [[2]]$Token[[15]]$start #> [1] 40 #>  #> [[2]]$Token[[15]]$len #> [1] 2 #>  #>  #> [[2]]$Token[[16]] #> [[2]]$Token[[16]]$form #> [1] \"하\" #>  #> [[2]]$Token[[16]]$tag #> [1] \"XSV\" #>  #> [[2]]$Token[[16]]$start #> [1] 42 #>  #> [[2]]$Token[[16]]$len #> [1] 1 #>  #>  #> [[2]]$Token[[17]] #> [[2]]$Token[[17]]$form #> [1] \"ᆸ니다\" #>  #> [[2]]$Token[[17]]$tag #> [1] \"EF\" #>  #> [[2]]$Token[[17]]$start #> [1] 42 #>  #> [[2]]$Token[[17]]$len #> [1] 3 #>  #>  #> [[2]]$Token[[18]] #> [[2]]$Token[[18]]$form #> [1] \".\" #>  #> [[2]]$Token[[18]]$tag #> [1] \"SF\" #>  #> [[2]]$Token[[18]]$start #> [1] 45 #>  #> [[2]]$Token[[18]]$len #> [1] 1 #>  #>  #>  #> [[2]]$Score #> [1] -95.38721 #>  #>  #> [[3]] #> [[3]]$Token #> [[3]]$Token[[1]] #> [[3]]$Token[[1]]$form #> [1] \"안녕\" #>  #> [[3]]$Token[[1]]$tag #> [1] \"NNG\" #>  #> [[3]]$Token[[1]]$start #> [1] 1 #>  #> [[3]]$Token[[1]]$len #> [1] 2 #>  #>  #> [[3]]$Token[[2]] #> [[3]]$Token[[2]]$form #> [1] \"하\" #>  #> [[3]]$Token[[2]]$tag #> [1] \"XSA\" #>  #> [[3]]$Token[[2]]$start #> [1] 3 #>  #> [[3]]$Token[[2]]$len #> [1] 1 #>  #>  #> [[3]]$Token[[3]] #> [[3]]$Token[[3]]$form #> [1] \"시\" #>  #> [[3]]$Token[[3]]$tag #> [1] \"EP\" #>  #> [[3]]$Token[[3]]$start #> [1] 4 #>  #> [[3]]$Token[[3]]$len #> [1] 1 #>  #>  #> [[3]]$Token[[4]] #> [[3]]$Token[[4]]$form #> [1] \"어요\" #>  #> [[3]]$Token[[4]]$tag #> [1] \"EF\" #>  #> [[3]]$Token[[4]]$start #> [1] 4 #>  #> [[3]]$Token[[4]]$len #> [1] 2 #>  #>  #> [[3]]$Token[[5]] #> [[3]]$Token[[5]]$form #> [1] \"kiwi\" #>  #> [[3]]$Token[[5]]$tag #> [1] \"SL\" #>  #> [[3]]$Token[[5]]$start #> [1] 7 #>  #> [[3]]$Token[[5]]$len #> [1] 4 #>  #>  #> [[3]]$Token[[6]] #> [[3]]$Token[[6]]$form #> [1] \"형태소\" #>  #> [[3]]$Token[[6]]$tag #> [1] \"NNG\" #>  #> [[3]]$Token[[6]]$start #> [1] 12 #>  #> [[3]]$Token[[6]]$len #> [1] 3 #>  #>  #> [[3]]$Token[[7]] #> [[3]]$Token[[7]]$form #> [1] \"분석기\" #>  #> [[3]]$Token[[7]]$tag #> [1] \"NNG\" #>  #> [[3]]$Token[[7]]$start #> [1] 16 #>  #> [[3]]$Token[[7]]$len #> [1] 3 #>  #>  #> [[3]]$Token[[8]] #> [[3]]$Token[[8]]$form #> [1] \"의\" #>  #> [[3]]$Token[[8]]$tag #> [1] \"JKG\" #>  #> [[3]]$Token[[8]]$start #> [1] 19 #>  #> [[3]]$Token[[8]]$len #> [1] 1 #>  #>  #> [[3]]$Token[[9]] #> [[3]]$Token[[9]]$form #> [1] \"R\" #>  #> [[3]]$Token[[9]]$tag #> [1] \"SL\" #>  #> [[3]]$Token[[9]]$start #> [1] 21 #>  #> [[3]]$Token[[9]]$len #> [1] 1 #>  #>  #> [[3]]$Token[[10]] #> [[3]]$Token[[10]]$form #> [1] \"wrapper\" #>  #> [[3]]$Token[[10]]$tag #> [1] \"SL\" #>  #> [[3]]$Token[[10]]$start #> [1] 23 #>  #> [[3]]$Token[[10]]$len #> [1] 7 #>  #>  #> [[3]]$Token[[11]] #> [[3]]$Token[[11]]$form #> [1] \"이\" #>  #> [[3]]$Token[[11]]$tag #> [1] \"VCP\" #>  #> [[3]]$Token[[11]]$start #> [1] 30 #>  #> [[3]]$Token[[11]]$len #> [1] 1 #>  #>  #> [[3]]$Token[[12]] #> [[3]]$Token[[12]]$form #> [1] \"ᆫ\" #>  #> [[3]]$Token[[12]]$tag #> [1] \"ETM\" #>  #> [[3]]$Token[[12]]$start #> [1] 30 #>  #> [[3]]$Token[[12]]$len #> [1] 1 #>  #>  #> [[3]]$Token[[13]] #> [[3]]$Token[[13]]$form #> [1] \"elbird\" #>  #> [[3]]$Token[[13]]$tag #> [1] \"SL\" #>  #> [[3]]$Token[[13]]$start #> [1] 32 #>  #> [[3]]$Token[[13]]$len #> [1] 6 #>  #>  #> [[3]]$Token[[14]] #> [[3]]$Token[[14]]$form #> [1] \"를\" #>  #> [[3]]$Token[[14]]$tag #> [1] \"JKO\" #>  #> [[3]]$Token[[14]]$start #> [1] 38 #>  #> [[3]]$Token[[14]]$len #> [1] 1 #>  #>  #> [[3]]$Token[[15]] #> [[3]]$Token[[15]]$form #> [1] \"소개\" #>  #> [[3]]$Token[[15]]$tag #> [1] \"NNG\" #>  #> [[3]]$Token[[15]]$start #> [1] 40 #>  #> [[3]]$Token[[15]]$len #> [1] 2 #>  #>  #> [[3]]$Token[[16]] #> [[3]]$Token[[16]]$form #> [1] \"하\" #>  #> [[3]]$Token[[16]]$tag #> [1] \"XSV\" #>  #> [[3]]$Token[[16]]$start #> [1] 42 #>  #> [[3]]$Token[[16]]$len #> [1] 1 #>  #>  #> [[3]]$Token[[17]] #> [[3]]$Token[[17]]$form #> [1] \"ᆸ니다\" #>  #> [[3]]$Token[[17]]$tag #> [1] \"EF\" #>  #> [[3]]$Token[[17]]$start #> [1] 42 #>  #> [[3]]$Token[[17]]$len #> [1] 3 #>  #>  #> [[3]]$Token[[18]] #> [[3]]$Token[[18]]$form #> [1] \".\" #>  #> [[3]]$Token[[18]]$tag #> [1] \"SF\" #>  #> [[3]]$Token[[18]]$start #> [1] 45 #>  #> [[3]]$Token[[18]]$len #> [1] 1 #>  #>  #>  #> [[3]]$Score #> [1] -95.38721 analyze(c(\"안녕하세요. kiwi 형태소 분석기의 R wrapper인 elbird를 소개합니다.\"), top_n = 1) #> [[1]] #> [[1]]$Token #> [[1]]$Token[[1]] #> [[1]]$Token[[1]]$form #> [1] \"안녕\" #>  #> [[1]]$Token[[1]]$tag #> [1] \"NNG\" #>  #> [[1]]$Token[[1]]$start #> [1] 1 #>  #> [[1]]$Token[[1]]$len #> [1] 2 #>  #>  #> [[1]]$Token[[2]] #> [[1]]$Token[[2]]$form #> [1] \"하\" #>  #> [[1]]$Token[[2]]$tag #> [1] \"XSA\" #>  #> [[1]]$Token[[2]]$start #> [1] 3 #>  #> [[1]]$Token[[2]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[3]] #> [[1]]$Token[[3]]$form #> [1] \"시\" #>  #> [[1]]$Token[[3]]$tag #> [1] \"EP\" #>  #> [[1]]$Token[[3]]$start #> [1] 4 #>  #> [[1]]$Token[[3]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[4]] #> [[1]]$Token[[4]]$form #> [1] \"어요\" #>  #> [[1]]$Token[[4]]$tag #> [1] \"EF\" #>  #> [[1]]$Token[[4]]$start #> [1] 4 #>  #> [[1]]$Token[[4]]$len #> [1] 2 #>  #>  #> [[1]]$Token[[5]] #> [[1]]$Token[[5]]$form #> [1] \".\" #>  #> [[1]]$Token[[5]]$tag #> [1] \"SF\" #>  #> [[1]]$Token[[5]]$start #> [1] 6 #>  #> [[1]]$Token[[5]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[6]] #> [[1]]$Token[[6]]$form #> [1] \"kiwi\" #>  #> [[1]]$Token[[6]]$tag #> [1] \"SL\" #>  #> [[1]]$Token[[6]]$start #> [1] 8 #>  #> [[1]]$Token[[6]]$len #> [1] 4 #>  #>  #> [[1]]$Token[[7]] #> [[1]]$Token[[7]]$form #> [1] \"형태소\" #>  #> [[1]]$Token[[7]]$tag #> [1] \"NNG\" #>  #> [[1]]$Token[[7]]$start #> [1] 13 #>  #> [[1]]$Token[[7]]$len #> [1] 3 #>  #>  #> [[1]]$Token[[8]] #> [[1]]$Token[[8]]$form #> [1] \"분석기\" #>  #> [[1]]$Token[[8]]$tag #> [1] \"NNG\" #>  #> [[1]]$Token[[8]]$start #> [1] 17 #>  #> [[1]]$Token[[8]]$len #> [1] 3 #>  #>  #> [[1]]$Token[[9]] #> [[1]]$Token[[9]]$form #> [1] \"의\" #>  #> [[1]]$Token[[9]]$tag #> [1] \"JKG\" #>  #> [[1]]$Token[[9]]$start #> [1] 20 #>  #> [[1]]$Token[[9]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[10]] #> [[1]]$Token[[10]]$form #> [1] \"R\" #>  #> [[1]]$Token[[10]]$tag #> [1] \"SL\" #>  #> [[1]]$Token[[10]]$start #> [1] 22 #>  #> [[1]]$Token[[10]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[11]] #> [[1]]$Token[[11]]$form #> [1] \"wrapper\" #>  #> [[1]]$Token[[11]]$tag #> [1] \"SL\" #>  #> [[1]]$Token[[11]]$start #> [1] 24 #>  #> [[1]]$Token[[11]]$len #> [1] 7 #>  #>  #> [[1]]$Token[[12]] #> [[1]]$Token[[12]]$form #> [1] \"이\" #>  #> [[1]]$Token[[12]]$tag #> [1] \"VCP\" #>  #> [[1]]$Token[[12]]$start #> [1] 31 #>  #> [[1]]$Token[[12]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[13]] #> [[1]]$Token[[13]]$form #> [1] \"ᆫ\" #>  #> [[1]]$Token[[13]]$tag #> [1] \"ETM\" #>  #> [[1]]$Token[[13]]$start #> [1] 31 #>  #> [[1]]$Token[[13]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[14]] #> [[1]]$Token[[14]]$form #> [1] \"elbird\" #>  #> [[1]]$Token[[14]]$tag #> [1] \"SL\" #>  #> [[1]]$Token[[14]]$start #> [1] 33 #>  #> [[1]]$Token[[14]]$len #> [1] 6 #>  #>  #> [[1]]$Token[[15]] #> [[1]]$Token[[15]]$form #> [1] \"를\" #>  #> [[1]]$Token[[15]]$tag #> [1] \"JKO\" #>  #> [[1]]$Token[[15]]$start #> [1] 39 #>  #> [[1]]$Token[[15]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[16]] #> [[1]]$Token[[16]]$form #> [1] \"소개\" #>  #> [[1]]$Token[[16]]$tag #> [1] \"NNG\" #>  #> [[1]]$Token[[16]]$start #> [1] 41 #>  #> [[1]]$Token[[16]]$len #> [1] 2 #>  #>  #> [[1]]$Token[[17]] #> [[1]]$Token[[17]]$form #> [1] \"하\" #>  #> [[1]]$Token[[17]]$tag #> [1] \"XSV\" #>  #> [[1]]$Token[[17]]$start #> [1] 43 #>  #> [[1]]$Token[[17]]$len #> [1] 1 #>  #>  #> [[1]]$Token[[18]] #> [[1]]$Token[[18]]$form #> [1] \"ᆸ니다\" #>  #> [[1]]$Token[[18]]$tag #> [1] \"EF\" #>  #> [[1]]$Token[[18]]$start #> [1] 43 #>  #> [[1]]$Token[[18]]$len #> [1] 3 #>  #>  #> [[1]]$Token[[19]] #> [[1]]$Token[[19]]$form #> [1] \".\" #>  #> [[1]]$Token[[19]]$tag #> [1] \"SF\" #>  #> [[1]]$Token[[19]]$start #> [1] 46 #>  #> [[1]]$Token[[19]]$len #> [1] 1 #>  #>  #>  #> [[1]]$Score #> [1] -92.35323"},{"path":"https://mrchypark.github.io/elbird/index.html","id":"tag-set","dir":"","previous_headings":"","what":"tag set","title":"Blazing Fast Morphological Analyzer Based on Kiwi(Korean Intelligent Word Identifier)","text":"Tag list used kiwipiepy package. table fetched 2022-06-18 01:06:28 Asia/Seoul.","code":""},{"path":[]},{"path":"https://mrchypark.github.io/elbird/index.html","id":"kiwi-package","dir":"","previous_headings":"Special Thanks to","what":"kiwi package","title":"Blazing Fast Morphological Analyzer Based on Kiwi(Korean Intelligent Word Identifier)","text":"bab2min kiwi package author.","code":""},{"path":"https://mrchypark.github.io/elbird/index.html","id":"logo-1","dir":"","previous_headings":"Special Thanks to","what":"logo","title":"Blazing Fast Morphological Analyzer Based on Kiwi(Korean Intelligent Word Identifier)","text":"jhk0530 suggestion.","code":""},{"path":"https://mrchypark.github.io/elbird/index.html","id":"cpp-backend","dir":"","previous_headings":"Special Thanks to","what":"cpp backend","title":"Blazing Fast Morphological Analyzer Based on Kiwi(Korean Intelligent Word Identifier)","text":"kkweon kiwigo package","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":null,"dir":"Reference","previous_headings":"","what":"Kiwi Class — Kiwi","title":"Kiwi Class — Kiwi","text":"Kiwi class provide method korean mophological analyze result.","code":""},{"path":[]},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Kiwi Class — Kiwi","text":"Kiwi$print() Kiwi$new() Kiwi$add_user_word() Kiwi$add_pre_analyzed_words() Kiwi$add_rules() Kiwi$load_user_dictionarys() Kiwi$extract_words() Kiwi$analyze() Kiwi$tokenize() Kiwi$split_into_sents() Kiwi$get_tidytext_func() Kiwi$clone()","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Kiwi Class — Kiwi","text":"print method Kiwi objects","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kiwi Class — Kiwi","text":"","code":"Kiwi$print(x, ...)"},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kiwi Class — Kiwi","text":"x self ... ignored","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Kiwi Class — Kiwi","text":"Create kiwi instance.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Kiwi Class — Kiwi","text":"","code":"Kiwi$new(   num_workers = 0,   model_size = \"base\",   integrate_allomorph = TRUE,   load_default_dict = TRUE )"},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kiwi Class — Kiwi","text":"num_workers int(optional): use multi-thread core number. default 0 means use core. model_size char(optional): kiwi model select. default \"base\". \"small\", \"large\" available. integrate_allomorph bool(optional): default TRUE. load_default_dict bool(optional): use defualt dictionary. default TRUE.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"method-add-user-word-","dir":"Reference","previous_headings":"","what":"Method add_user_word()","title":"Kiwi Class — Kiwi","text":"add user word pos score","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Kiwi Class — Kiwi","text":"","code":"Kiwi$add_user_word(word, tag, score, orig_word = \"\")"},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kiwi Class — Kiwi","text":"word char(required): target word add. tag Tags(required): tag information word. score num(required): score information word. orig_word char(optional): origin word.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"method-add-pre-analyzed-words-","dir":"Reference","previous_headings":"","what":"Method add_pre_analyzed_words()","title":"Kiwi Class — Kiwi","text":"TODO","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Kiwi Class — Kiwi","text":"","code":"Kiwi$add_pre_analyzed_words(form, analyzed, score)"},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kiwi Class — Kiwi","text":"form char(required): target word add analyzed result. analyzed data.frame(required): analyzed result expected. score num(required): score information pre analyzed result.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"method-add-rules-","dir":"Reference","previous_headings":"","what":"Method add_rules()","title":"Kiwi Class — Kiwi","text":"TODO","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Kiwi Class — Kiwi","text":"","code":"Kiwi$add_rules(tag, pattern, replacement, score)"},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kiwi Class — Kiwi","text":"tag Tags(required): target tag add rules. pattern char(required): regular expression. replacement char(required): replace text. score num(required): score information rules.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"method-load-user-dictionarys-","dir":"Reference","previous_headings":"","what":"Method load_user_dictionarys()","title":"Kiwi Class — Kiwi","text":"add user dictionary using text file.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Kiwi Class — Kiwi","text":"","code":"Kiwi$load_user_dictionarys(user_dict_path)"},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kiwi Class — Kiwi","text":"user_dict_path char(required): path user dictionary file.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"method-extract-words-","dir":"Reference","previous_headings":"","what":"Method extract_words()","title":"Kiwi Class — Kiwi","text":"Extract Noun word candidate texts.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Kiwi Class — Kiwi","text":"","code":"Kiwi$extract_words(   input,   min_cnt,   max_word_len,   min_score,   pos_threshold,   apply = FALSE )"},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kiwi Class — Kiwi","text":"input char(required): target text data min_cnt int(required): minimum count word text. max_word_len int(required): max word length. min_score num(required): minimum score. pos_threshold num(required): pos threashold. apply bool(optional): apply extracted word user word dict.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"method-analyze-","dir":"Reference","previous_headings":"","what":"Method analyze()","title":"Kiwi Class — Kiwi","text":"Analyze text token tag results.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Kiwi Class — Kiwi","text":"","code":"Kiwi$analyze(text, top_n = 3, match_option = Match$ALL, stopwords = FALSE)"},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kiwi Class — Kiwi","text":"text char(required): target text. top_n int(optional): number result. Default 3. match_option match_option Match: use Match. Default Match$stopwords stopwords option. Default FALSE use nothing. TRUE, use embaded stopwords dictionany. char: path dictionary txt file, use file. Stopwords class, use . valid value, work FALSE.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Kiwi Class — Kiwi","text":"list result.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"method-tokenize-","dir":"Reference","previous_headings":"","what":"Method tokenize()","title":"Kiwi Class — Kiwi","text":"Analyze text token pos result just top 1.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Kiwi Class — Kiwi","text":"","code":"Kiwi$tokenize(   text,   match_option = Match$ALL,   stopwords = FALSE,   form = \"tibble\" )"},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kiwi Class — Kiwi","text":"text char(required): target text. match_option match_option Match: use Match. Default Match$stopwords stopwords option. Default FALSE use nothing. TRUE, use embaded stopwords dictionany. char: path dictionary txt file, use file. Stopwords class, use . valid value, work FALSE. form char(optional): return form. default \"tibble\". \"list\", \"tidytext\" available.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"method-split-into-sents-","dir":"Reference","previous_headings":"","what":"Method split_into_sents()","title":"Kiwi Class — Kiwi","text":"text may split sentence sentence. split_into_sents works split sentences sentence sentence.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Kiwi Class — Kiwi","text":"","code":"Kiwi$split_into_sents(text, match_option = Match$ALL, return_tokens = FALSE)"},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kiwi Class — Kiwi","text":"text char(required): target text. match_option match_option Match: use Match. Default Match$return_tokens bool(optional): add tokenized resault.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"method-get-tidytext-func-","dir":"Reference","previous_headings":"","what":"Method get_tidytext_func()","title":"Kiwi Class — Kiwi","text":"set function tidytext unnest_tokens.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Kiwi Class — Kiwi","text":"","code":"Kiwi$get_tidytext_func(match_option = Match$ALL, stopwords = FALSE)"},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kiwi Class — Kiwi","text":"match_option match_option Match: use Match. Default Match$stopwords stopwords option. Default TRUE use embaded stopwords dictionary. FALSE, use embaded stopwords dictionary. char: path dictionary txt file, use file. Stopwords class, use . valid value, work FALSE.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Kiwi Class — Kiwi","text":"function","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kiwi Class — Kiwi","text":"","code":"\\dontrun{    kw <- Kiwi$new()    tidytoken <- kw$get_tidytext_func()    tidytoken(\"test\") }"},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Kiwi Class — Kiwi","text":"objects class cloneable method.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Kiwi Class — Kiwi","text":"","code":"Kiwi$clone(deep = FALSE)"},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kiwi Class — Kiwi","text":"deep Whether make deep clone.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Kiwi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kiwi Class — Kiwi","text":"","code":"if (FALSE) {   kw <- Kiwi$new()   kw$analyze(\"test\")   kw$tokenize(\"test\")   }  ## ------------------------------------------------ ## Method `Kiwi$get_tidytext_func` ## ------------------------------------------------  if (FALSE) {    kw <- Kiwi$new()    tidytoken <- kw$get_tidytext_func()    tidytoken(\"test\") }"},{"path":"https://mrchypark.github.io/elbird/reference/Match.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Match Options. — Match","title":"Analyze Match Options. — Match","text":"option contains URL, EMAIL, HASHTAG, MENTION.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Match Options. — Match","text":"","code":"Match"},{"path":"https://mrchypark.github.io/elbird/reference/Match.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Analyze Match Options. — Match","text":"object class EnumGenerator length 13.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Match.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze Match Options. — Match","text":"","code":"if (FALSE) {  Match  Match$ALL }"},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":null,"dir":"Reference","previous_headings":"","what":"Stopwords Class — Stopwords","title":"Stopwords Class — Stopwords","text":"Stopwords filter result.","code":""},{"path":[]},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Stopwords Class — Stopwords","text":"Stopwords$print() Stopwords$new() Stopwords$add() Stopwords$add_from_dict() Stopwords$remove() Stopwords$save_dict() Stopwords$get() Stopwords$clone()","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Stopwords Class — Stopwords","text":"print method Stopwords objects","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stopwords Class — Stopwords","text":"","code":"Stopwords$print(x, ...)"},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stopwords Class — Stopwords","text":"x self ... ignored","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Stopwords Class — Stopwords","text":"Create stopwords object filter stopwords analyze() tokenize() results.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Stopwords Class — Stopwords","text":"","code":"Stopwords$new(use_system_dict = TRUE)"},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stopwords Class — Stopwords","text":"use_system_dict bool(optional): use system stopwords dictionary . Defualt TRUE.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"method-add-","dir":"Reference","previous_headings":"","what":"Method add()","title":"Stopwords Class — Stopwords","text":"add stopword one time.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Stopwords Class — Stopwords","text":"","code":"Stopwords$add(form = NA, tag = Tags$nnp)"},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stopwords Class — Stopwords","text":"form char(optional): Form information. Default NA. tag char(optional): Tag information. Default \"NNP\". Please check Tags.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stopwords Class — Stopwords","text":"","code":"\\dontrun{   sw <- Stopwords$new()   sw$add(\"word\", \"NNG\")   sw$add(\"word\", Tags$nng)   }"},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"method-add-from-dict-","dir":"Reference","previous_headings":"","what":"Method add_from_dict()","title":"Stopwords Class — Stopwords","text":"add stopword text file. text file need form \"TEXT/TAG\". TEXT can remove like \"/NNP\". TAG required like \"FORM/NNP\".","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Stopwords Class — Stopwords","text":"","code":"Stopwords$add_from_dict(path, dict_name = \"user\")"},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stopwords Class — Stopwords","text":"path char(required): dictionary file path. dict_name char(optional): default \"user\"","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"method-remove-","dir":"Reference","previous_headings":"","what":"Method remove()","title":"Stopwords Class — Stopwords","text":"remove stopword one time.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Stopwords Class — Stopwords","text":"","code":"Stopwords$remove(form = NULL, tag = NULL)"},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stopwords Class — Stopwords","text":"form char(optional): Form information. form set, remove tag input. tag char(required): Tag information. Please check Tags.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"method-save-dict-","dir":"Reference","previous_headings":"","what":"Method save_dict()","title":"Stopwords Class — Stopwords","text":"save current stopwords list text file.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Stopwords Class — Stopwords","text":"","code":"Stopwords$save_dict(path)"},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stopwords Class — Stopwords","text":"path char(required): file path save stopwords list.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"method-get-","dir":"Reference","previous_headings":"","what":"Method get()","title":"Stopwords Class — Stopwords","text":"return tibble stopwords.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Stopwords Class — Stopwords","text":"","code":"Stopwords$get()"},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Stopwords Class — Stopwords","text":"tibble stopwords options analyze() / tokenize() function.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Stopwords Class — Stopwords","text":"objects class cloneable method.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Stopwords Class — Stopwords","text":"","code":"Stopwords$clone(deep = FALSE)"},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stopwords Class — Stopwords","text":"deep Whether make deep clone.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Stopwords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stopwords Class — Stopwords","text":"","code":"if (FALSE) {   Stopwords$new() }  ## ------------------------------------------------ ## Method `Stopwords$add` ## ------------------------------------------------   if (FALSE) {   sw <- Stopwords$new()   sw$add(\"word\", \"NNG\")   sw$add(\"word\", Tags$nng)   }"},{"path":"https://mrchypark.github.io/elbird/reference/Tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Tag list — Tags","title":"Tag list — Tags","text":"Tags contains tag list elbird.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tag list — Tags","text":"","code":"Tags"},{"path":"https://mrchypark.github.io/elbird/reference/Tags.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tag list — Tags","text":"object class EnumGenerator length 47.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Tags.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Tag list — Tags","text":"https://github.com/bab2min/Kiwi","code":""},{"path":"https://mrchypark.github.io/elbird/reference/Tags.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tag list — Tags","text":"","code":"if (FALSE) {   Tags   Tags$nnp  }"},{"path":"https://mrchypark.github.io/elbird/reference/analyze.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple version of analyze function. — analyze","title":"Simple version of analyze function. — analyze","text":"Simple version analyze function.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/analyze.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple version of analyze function. — analyze","text":"","code":"analyze(text, top_n = 3, match_option = Match$ALL, stopwords = FALSE)"},{"path":"https://mrchypark.github.io/elbird/reference/analyze.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple version of analyze function. — analyze","text":"text target text. top_n integer: Number result. Default 3. match_option Match: use Match. Default Match$stopwords stopwords option. Default TRUE use embaded stopwords dictionany. FALSE, use embaded stopwords dictionany. char: path dictionary txt file, use file. Stopwords class, use . valid value, work FALSE. Check analyze() use stopwords param.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/analyze.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple version of analyze function. — analyze","text":"","code":"if (FALSE) {   analyze(\"Test text.\")   analyze(\"Please use Korean.\", top_n = 1)   analyze(\"Test text.\", 1, Match$ALL_WITH_NORMALIZING)   analyze(\"Test text.\", stopwords = FALSE)   analyze(\"Test text.\", stopwords = TRUE)   analyze(\"Test text.\", stopwords = \"user_dict.txt\")   analyze(\"Test text.\", stopwords = Stopwords$new(TRUE)) }"},{"path":"https://mrchypark.github.io/elbird/reference/elbird-package.html","id":null,"dir":"Reference","previous_headings":"","what":"elbird: Blazing Fast Morphological Analyzer Based on Kiwi(Korean Intelligent Word Identifier) — elbird-package","title":"elbird: Blazing Fast Morphological Analyzer Based on Kiwi(Korean Intelligent Word Identifier) — elbird-package","text":"R wrapper package Kiwi(Korean Intelligent Word Identifier), blazing fast speed morphological analyzer Korean. supports configuration user dictionary detection unregistered nouns based frequency.","code":""},{"path":[]},{"path":"https://mrchypark.github.io/elbird/reference/elbird-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"elbird: Blazing Fast Morphological Analyzer Based on Kiwi(Korean Intelligent Word Identifier) — elbird-package","text":"Maintainer: Chanyub Park mrchypark@gmail.com (ORCID)","code":""},{"path":"https://mrchypark.github.io/elbird/reference/get_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Get kiwi language model file. — get_model","title":"Get kiwi language model file. — get_model","text":"Get kiwi language model file.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/get_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get kiwi language model file. — get_model","text":"","code":"get_model(size = \"base\", path = model_home(), clean = FALSE)"},{"path":"https://mrchypark.github.io/elbird/reference/get_model.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Get kiwi language model file. — get_model","text":"https://github.com/bab2min/Kiwi/releases","code":""},{"path":"https://mrchypark.github.io/elbird/reference/get_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get kiwi language model file. — get_model","text":"size \"small\", \"base\", \"large\" model. default \"base\". Also \"\" available. path path model files. default model_home(). clean remove previous model files get new.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/get_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get kiwi language model file. — get_model","text":"","code":"if (FALSE) {   get_model(\"small\") }"},{"path":"https://mrchypark.github.io/elbird/reference/model_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Verifies if model files exists. — model_exists","title":"Verifies if model files exists. — model_exists","text":"Verifies model files exists.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/model_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verifies if model files exists. — model_exists","text":"","code":"model_exists(size = \"all\")"},{"path":"https://mrchypark.github.io/elbird/reference/model_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verifies if model files exists. — model_exists","text":"size model size. default \"\" true three models must present.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/model_exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verifies if model files exists. — model_exists","text":"logical model files exists .","code":""},{"path":"https://mrchypark.github.io/elbird/reference/model_exists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verifies if model files exists. — model_exists","text":"","code":"if (FALSE) {   get_model(\"small\")   model_exists(\"small\") }"},{"path":"https://mrchypark.github.io/elbird/reference/model_home.html","id":null,"dir":"Reference","previous_headings":"","what":"A simple exported version of kiwi_model_path()\nReturns the kiwi model path. — model_home","title":"A simple exported version of kiwi_model_path()\nReturns the kiwi model path. — model_home","text":"TODO explain ELBIRD_MODEL_HOME","code":""},{"path":"https://mrchypark.github.io/elbird/reference/model_home.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A simple exported version of kiwi_model_path()\nReturns the kiwi model path. — model_home","text":"","code":"model_home()"},{"path":"https://mrchypark.github.io/elbird/reference/model_home.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A simple exported version of kiwi_model_path()\nReturns the kiwi model path. — model_home","text":"character: file path","code":""},{"path":"https://mrchypark.github.io/elbird/reference/model_home.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A simple exported version of kiwi_model_path()\nReturns the kiwi model path. — model_home","text":"","code":"model_home() #> [1] \"/home/runner/.cache/R/renv/library/elbird-c4332030/R-4.2/x86_64-pc-linux-gnu/elbird//model\""},{"path":"https://mrchypark.github.io/elbird/reference/model_works.html","id":null,"dir":"Reference","previous_headings":"","what":"Verifies if models work fine. — model_works","title":"Verifies if models work fine. — model_works","text":"Verifies models work fine.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/model_works.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verifies if models work fine. — model_works","text":"","code":"model_works(size = \"all\")"},{"path":"https://mrchypark.github.io/elbird/reference/model_works.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verifies if models work fine. — model_works","text":"size model size. default \"\" true three models must present.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/model_works.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verifies if models work fine. — model_works","text":"logical model work .","code":""},{"path":"https://mrchypark.github.io/elbird/reference/model_works.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verifies if models work fine. — model_works","text":"","code":"if (FALSE) {   get_model(\"small\")   model_works(\"small\") }"},{"path":"https://mrchypark.github.io/elbird/reference/split_into_sents.html","id":null,"dir":"Reference","previous_headings":"","what":"Split Sentences — split_into_sents","title":"Split Sentences — split_into_sents","text":"text may split sentence sentence. split_into_sents works split sentences sentence sentence.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/split_into_sents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split Sentences — split_into_sents","text":"","code":"split_into_sents(text, return_tokens = FALSE)"},{"path":"https://mrchypark.github.io/elbird/reference/split_into_sents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split Sentences — split_into_sents","text":"text target text. return_tokens add tokenized resault.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/split_into_sents.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split Sentences — split_into_sents","text":"","code":"if (FALSE) {  split_into_sents(\"text\")  split_into_sents(\"text\", return_tokens = TRUE) }"},{"path":"https://mrchypark.github.io/elbird/reference/tokenize.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple version of tokenizer function. — tokenize","title":"Simple version of tokenizer function. — tokenize","text":"Simple version tokenizer function.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/tokenize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple version of tokenizer function. — tokenize","text":"","code":"tokenize(text, match_option = Match$ALL, stopwords = TRUE)  tokenize_tbl(text, match_option = Match$ALL, stopwords = TRUE)  tokenize_tidytext(text, match_option = Match$ALL, stopwords = TRUE)  tokenize_tidy(text, match_option = Match$ALL, stopwords = TRUE)"},{"path":"https://mrchypark.github.io/elbird/reference/tokenize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple version of tokenizer function. — tokenize","text":"text target text. match_option Match: use Match. Default Match$stopwords stopwords option. Default TRUE use embaded stopwords dictionany. FALSE, use embaded stopwords dictionany. char: path dictionary txt file, use file. Stopwords class, use . valid value, work FALSE. Check analyze() use stopwords param.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/tokenize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple version of tokenizer function. — tokenize","text":"list type result.","code":""},{"path":"https://mrchypark.github.io/elbird/reference/tokenize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple version of tokenizer function. — tokenize","text":"","code":"if (FALSE) {   tokenize(\"Test text.\")   tokenize(\"Please use Korean.\", Match$ALL_WITH_NORMALIZING) }"},{"path":"https://mrchypark.github.io/elbird/news/index.html","id":"elbird-023","dir":"Changelog","previous_headings":"","what":"elbird 0.2.3","title":"elbird 0.2.3","text":"CRAN release: 2022-04-19 Fix cran test fail.","code":""},{"path":"https://mrchypark.github.io/elbird/news/index.html","id":"elbird-022","dir":"Changelog","previous_headings":"","what":"elbird 0.2.2","title":"elbird 0.2.2","text":"CRAN release: 2022-04-17 size 30 [-Wvla]","code":""},{"path":"https://mrchypark.github.io/elbird/news/index.html","id":"elbird-021","dir":"Changelog","previous_headings":"","what":"elbird 0.2.1","title":"elbird 0.2.1","text":"Add Stopwords add() method form param default value NA. Fix Stopwords add_from_dict() param pass.","code":""},{"path":"https://mrchypark.github.io/elbird/news/index.html","id":"elbird-020","dir":"Changelog","previous_headings":"","what":"elbird 0.2.0","title":"elbird 0.2.0","text":"Change _tbl function base. tokenize() return tibble base remove tokenize_tbl(). Fix Kiwi builder updated, kiwi rebuild. Change git clone curl release source download mac. Change tokenize function stopwords params default TRUE. Update Model version 0.11.2","code":""},{"path":"https://mrchypark.github.io/elbird/news/index.html","id":"elbird-013","dir":"Changelog","previous_headings":"","what":"elbird 0.1.3","title":"elbird 0.1.3","text":"CRAN release: 2022-04-04 Fix bashism configure file cran.","code":""},{"path":"https://mrchypark.github.io/elbird/news/index.html","id":"elbird-012","dir":"Changelog","previous_headings":"","what":"elbird 0.1.2","title":"elbird 0.1.2","text":"Fix -Wbitwise-instead--logical warning cran.","code":""},{"path":"https://mrchypark.github.io/elbird/news/index.html","id":"elbird-011","dir":"Changelog","previous_headings":"","what":"elbird 0.1.1","title":"elbird 0.1.1","text":"CRAN release: 2022-03-31 Fix -Wreorder warning cran.","code":""},{"path":"https://mrchypark.github.io/elbird/news/index.html","id":"elbird-010","dir":"Changelog","previous_headings":"","what":"elbird 0.1.0","title":"elbird 0.1.0","text":"Change backend python cpp.","code":""},{"path":"https://mrchypark.github.io/elbird/news/index.html","id":"elbird-002","dir":"Changelog","previous_headings":"","what":"elbird 0.0.2","title":"elbird 0.0.2","text":"Package name lower. Kiwi version 0.10.3 support. Python version 3.10.2 support.","code":""},{"path":"https://mrchypark.github.io/elbird/news/index.html","id":"elbird-001","dir":"Changelog","previous_headings":"","what":"Elbird 0.0.1","title":"Elbird 0.0.1","text":"Fix add_user_word function cache.","code":""},{"path":"https://mrchypark.github.io/elbird/news/index.html","id":"elbird-0009001","dir":"Changelog","previous_headings":"","what":"Elbird 0.0.0.9001","title":"Elbird 0.0.0.9001","text":"Added NEWS.md file track changes package.","code":""}]
