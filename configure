#!/bin/sh
#  Based on configure of Rblpapi
#  https://github.com/Rblp/Rblpapi/blob/master/configure

## Check that we are on Unix
which uname
if [ $? -ne 0 ]; then
    echo "You do not have 'uname' so this is unlikely to be a Unix system. Exiting."
    exit 1
fi

# Library settings
PKG_TEST_HEADER="<kiwi/Kiwi.h>"
PKG_LIBS="-lkiwi"
PKG_CPPFLAGS=""
LIB_VER="0.21.0"

# Copy libcache for local development.
if [ -f "`pwd`/kiwilibtmp/libs/libkiwi.a" ]; then
  echo "Found kiwilibtmp folder!"
  mkdir -p kiwilibs
  cp -rf kiwilibtmp/* kiwilibs/
fi

# Check for custom locations
if [ "$INCLUDE_DIR" ] || [ "$LIB_DIR" ]; then
  echo "Found INCLUDE_DIR and/or LIB_DIR!"
  PKG_CPPFLAGS="-I$INCLUDE_DIR $PKG_CPPFLAGS"
  PKG_LIBS="-L$LIB_DIR $PKG_LIBS"

elif [ -d "`pwd`/kiwilibs/libs/" ]; then
  echo "Found libkiwi on pwd installation..."
  PKG_CPPFLAGS="-I`pwd`/kiwilibs/include $PKG_CPPFLAGS"
  PKG_LIBS="-L`pwd`/kiwilibs/libs $PKG_LIBS"

else
  echo "Prior system libkiwi installation not found"
  echo "Preparing to download and build library from source..."

  which git
  if [ $? -ne 0 ]; then
    echo "------------------------------[ ELBIRD ]------------------------------"
    echo "Configuration failed because 'git' was not found."
    echo "If you want to kiwi build from source in package installation prosess,"
    echo "make sure git and cmake work in system."
    echo "-------------------------------------------------------------------------"
    exit 1
  fi

  which cmake
  if [ $? -ne 0 ]; then
    export PATH=$PATH:/Applications/CMake.app/Contents/bin
  fi

  which cmake
  if [ $? -ne 0 ]; then
    echo "------------------------------[ ELBIRD ]------------------------------"
    echo "Configuration failed because 'libkiwi' and 'cmake' were not found."
    echo "If 'libkiwi' is already installed but in a non-standard location, you"
    echo "may set INCLUDE_DIR and LIB_DIR manually via:"
    echo "R CMD INSTALL --configure-vars='INCLUDE_DIR=... LIB_DIR=...'"
    echo ""
    echo "If you want to kiwi build from source in package installation prosess,"
    echo "make sure cmake work."
    echo "-------------------------------------------------------------------------"
    exit 1
  fi

  git config --global advice.detachedHead false
  git clone -b v$LIB_VER --depth 1 https://github.com/bab2min/Kiwi
  cd Kiwi

  git rm third_party/googletest
  git rm third_party/cpuinfo
  git submodule update --init --recursive

  mkdir build
  cd build
  cmake -DCMAKE_BUILD_TYPE=Release -DKIWI_BUILD_TEST=OFF -DKIWI_USE_CPUINFO=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_POLICY_DEFAULT_CMP0048=NEW -DCMAKE_POLICY_DEFAULT_CMP0077=NEW -DCMAKE_POLICY_VERSION_MINIMUM=3.5 -Wno-dev --log-level=ERROR ..
  echo "** make is running..."
  make Kiwi_static 1> makelog.txt 2>&1
  echo "** done!"
  cd ../..

  mkdir -p kiwilibs/libs
  # Check for different possible library names
  if [ -f "Kiwi/build/libkiwi_static.a" ]; then
    mv -f Kiwi/build/libkiwi_static.a kiwilibs/libs/libkiwi.a
  elif [ -f "Kiwi/build/libKiwi_static.a" ]; then
    mv -f Kiwi/build/libKiwi_static.a kiwilibs/libs/libkiwi.a
  else
    echo "Error: Could not find static library file"
    ls -la Kiwi/build/lib*.a
    exit 1
  fi
  mv -f Kiwi/include kiwilibs/include
  rm -rf Kiwi

  # Copy libcache for local development.
  cp -rf kiwilibs/ kiwilibtmp/
  PKG_CPPFLAGS="-I`pwd`/kiwilibs/include $PKG_CPPFLAGS"
  PKG_LIBS="-L`pwd`/kiwilibs/libs $PKG_LIBS"
fi

# For debugging
echo "Using PKG_CPPFLAGS=$PKG_CPPFLAGS"
echo "Using PKG_LIBS=$PKG_LIBS"

# Find compiler and check C++17 support first
CXX17=`${R_HOME}/bin/R CMD config CXX17`
CXX17FLAGS=`${R_HOME}/bin/R CMD config CXX17FLAGS`
CXX11=`${R_HOME}/bin/R CMD config CXX11`
CXXFLAGS=`${R_HOME}/bin/R CMD config CXXFLAGS`

# Check for C++17 support
if [ -z "$CXX17" ]; then
    echo "------------------------------[ ELBIRD ]------------------------------"
    echo "Configuration failed because C++17 support is required for Kiwi v0.21.0."
    echo "Please upgrade your compiler or R installation to support C++17."
    echo "Current R version: `${R_HOME}/bin/R --version | head -1`"
    echo "-------------------------------------------------------------------------"
    exit 1
fi

# Test C++17 compilation
echo "int main() { return 0; }" > /tmp/test_cpp17.cpp
${CXX17} ${CXX17FLAGS} -std=c++17 /tmp/test_cpp17.cpp -o /tmp/test_cpp17_out >/dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "------------------------------[ ELBIRD ]------------------------------"
    echo "Configuration failed because C++17 compilation test failed."
    echo "Please ensure your compiler supports C++17 standard."
    echo "Compiler: $CXX17"
    echo "Flags: $CXX17FLAGS"
    echo "-------------------------------------------------------------------------"
    rm -f /tmp/test_cpp17.cpp /tmp/test_cpp17_out
    exit 1
fi
rm -f /tmp/test_cpp17.cpp /tmp/test_cpp17_out

echo "C++17 support confirmed."

# Test for libkiwi using C++17
echo "#include $PKG_TEST_HEADER" | ${CXX17} ${PKG_CPPFLAGS} ${CXX17FLAGS} -std=c++17 -E -xc++ - >/dev/null 2>&1

if [ $? -ne 0 ]; then
    echo "------------------------------[ ELBIRD ]------------------------------"
    echo "Configuration failed because 'libkiwi' was not found."
    echo "If 'libkiwi' is already installed but in a non-standard location, you"
    echo "may set INCLUDE_DIR and LIB_DIR manually via:"
    echo "R CMD INSTALL --configure-vars='INCLUDE_DIR=... LIB_DIR=...'"
    echo "-------------------------------------------------------------------------"
    exit 1
fi

# Write to Makevars
sed -e "s|@cppflags@|$PKG_CPPFLAGS|" -e "s|@libs@|$PKG_LIBS|" -e "s|@cxx17flags@|$CXX17FLAGS|" src/Makevars.in > src/Makevars

# Success
exit 0

